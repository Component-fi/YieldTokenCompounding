/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockFactoryCreatedPool,
  MockFactoryCreatedPoolInterface,
} from "../MockFactoryCreatedPool";

const _abi = [
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50608a8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806338fff2d014602d575b600080fd5b60336047565b604051603e9190604b565b60405180910390f35b3090565b9081526020019056fea2646970667358221220129b486446fdff6033ec0d3e9074e241ac8fd1994f066fe14039a7942d5a59b964736f6c63430007030033";

export class MockFactoryCreatedPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockFactoryCreatedPool> {
    return super.deploy(overrides || {}) as Promise<MockFactoryCreatedPool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockFactoryCreatedPool {
    return super.attach(address) as MockFactoryCreatedPool;
  }
  connect(signer: Signer): MockFactoryCreatedPool__factory {
    return super.connect(signer) as MockFactoryCreatedPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFactoryCreatedPoolInterface {
    return new utils.Interface(_abi) as MockFactoryCreatedPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockFactoryCreatedPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockFactoryCreatedPool;
  }
}
