/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YieldTokenCompounding,
  YieldTokenCompoundingInterface,
} from "../YieldTokenCompounding";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_balVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trancheAddress",
        type: "address",
      },
    ],
    name: "approveTranchePTOnBalancer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trancheAddress",
        type: "address",
      },
    ],
    name: "checkTranchePTAllowanceOnBalancer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_n",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_trancheAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_balancerPoolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedYtOutput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedBaseTokensSpent",
        type: "uint256",
      },
    ],
    name: "compound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260001960a05234801561001657600080fd5b50604051610dc5380380610dc58339810160408190526100359161004a565b60601b6001600160601b031916608052610078565b60006020828403121561005b578081fd5b81516001600160a01b0381168114610071578182fd5b9392505050565b60805160601c60a051610d136100b2600039806105de528061086c5250806104ca528061051752806105bc52806108905250610d136000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063117d8d0b1461005157806377aba2131461007b5780639e8ebfbb14610090578063bfe75b86146100b0575b600080fd5b61006461005f366004610a35565b6100c5565b604051610072929190610cb7565b60405180910390f35b6100836104c8565b6040516100729190610b12565b6100a361009e3660046109a2565b6104ec565b6040516100729190610cae565b6100c36100be3660046109a2565b610596565b005b60008060008860ff161180156100de5750601f8860ff16105b6101035760405162461bcd60e51b81526004016100fa90610b7d565b60405180910390fd5b60008790506000816001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561014357600080fd5b505afa158015610157573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017b91906109de565b90506000816001600160a01b03166370a08231336040518263ffffffff1660e01b81526004016101ab9190610b12565b60206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fb91906109fa565b90506000836001600160a01b03166309218e916040518163ffffffff1660e01b815260040160206040518083038186803b15801561023857600080fd5b505afa15801561024c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027091906109de565b9050836001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ab57600080fd5b505afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906109de565b6001600160a01b03166323b872dd33838c6040518463ffffffff1660e01b815260040161031293929190610b26565b602060405180830381600087803b15801561032c57600080fd5b505af1158015610340573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036491906109be565b5060006103748d868d878661065d565b905060006103828585610734565b9050898210156103a45760405162461bcd60e51b81526004016100fa90610bc4565b888111156103c45760405162461bcd60e51b81526004016100fa90610bf3565b856001600160a01b031663764b666c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103fd57600080fd5b505afa158015610411573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043591906109de565b6001600160a01b031663a9059cbb33846040518363ffffffff1660e01b8152600401610462929190610b4a565b602060405180830381600087803b15801561047c57600080fd5b505af1158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b491906109be565b50909d909c509a5050505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604051636eb1769f60e11b815260009082906001600160a01b0382169063dd62ed3e9061053f9030907f000000000000000000000000000000000000000000000000000000000000000090600401610b63565b60206040518083038186803b15801561055757600080fd5b505afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f91906109fa565b9392505050565b60405163095ea7b360e01b815281906001600160a01b0382169063095ea7b390610606907f0000000000000000000000000000000000000000000000000000000000000000907f000000000000000000000000000000000000000000000000000000000000000090600401610b4a565b602060405180830381600087803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065891906109be565b505050565b600080805b8760ff168160ff16101561072957600080886001600160a01b03166385f45c88306040518263ffffffff1660e01b815260040161069f9190610b12565b6040805180830381600087803b1580156106b857600080fd5b505af11580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190610a12565b91509150808401935061071e8989893060018f0360ff168860ff1614610716578a610718565b335b876107bc565b505050600101610662565b509695505050505050565b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610763903390600401610b12565b60206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b391906109fa565b90910392915050565b60008087866107c9610932565b6040518060c001604052808b81526020018560018111156107e657fe5b8152602001846001600160a01b03168152602001836001600160a01b0316815260200187815260200160405180602001604052806000815250815250905061082c61097b565b50604080516080810182526001600160a01b03808b1682526000602083018190528a8216838501526060830181905292516352bbbe2960e01b81529192917f00000000000000000000000000000000000000000000000000000000000000009183917f0000000000000000000000000000000000000000000000000000000000000000909116906352bbbe29906108cd908890889086908890600401610c22565b602060405180830381600087803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f91906109fa565b9f9e505050505050505050505050505050565b6040805160c0810190915260008082526020820190815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001606081525090565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6000602082840312156109b3578081fd5b813561058f81610cc5565b6000602082840312156109cf578081fd5b8151801515811461058f578182fd5b6000602082840312156109ef578081fd5b815161058f81610cc5565b600060208284031215610a0b578081fd5b5051919050565b60008060408385031215610a24578081fd5b505080516020909101519092909150565b60008060008060008060c08789031215610a4d578182fd5b863560ff81168114610a5d578283fd5b95506020870135610a6d81610cc5565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008151808452815b81811015610ab757602081850181015186830182015201610a9b565b81811115610ac85782602083870101525b50601f01601f19169290920160200192915050565b80516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b60208082526027908201527f6e2068617320746f206265206265747765656e203120746f2032353520696e63604082015266363ab9b4bb329760c91b606082015260800190565b602080825260159082015274151bdbc81b5d58da081cdb1a5c1c1859d94e881655605a1b604082015260600190565b602080825260159082015274151bdbc81b5d58da081cdb1a5c1c1859d94e881095605a1b604082015260600190565b600060e08252855160e0830152602086015160028110610c3e57fe5b61010083015260408601516001600160a01b03908116610120840152606087015116610140830152608086015161016083015260a086015160c0610180840152610c8c6101a0840182610a92565b915050610c9c6020830186610add565b60a082019390935260c0015292915050565b90815260200190565b918252602082015260400190565b6001600160a01b0381168114610cda57600080fd5b5056fea2646970667358221220a8924f11360381ff2df782e17fab9e7eb70132aa439244791a349bf605a337b764736f6c63430007030033";

export class YieldTokenCompounding__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _balVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YieldTokenCompounding> {
    return super.deploy(
      _balVault,
      overrides || {}
    ) as Promise<YieldTokenCompounding>;
  }
  getDeployTransaction(
    _balVault: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_balVault, overrides || {});
  }
  attach(address: string): YieldTokenCompounding {
    return super.attach(address) as YieldTokenCompounding;
  }
  connect(signer: Signer): YieldTokenCompounding__factory {
    return super.connect(signer) as YieldTokenCompounding__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldTokenCompoundingInterface {
    return new utils.Interface(_abi) as YieldTokenCompoundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldTokenCompounding {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as YieldTokenCompounding;
  }
}
