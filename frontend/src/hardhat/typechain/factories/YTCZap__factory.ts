/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YTCZap, YTCZapInterface } from "../YTCZap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ytcContractAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_n",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_trancheAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_balancerPoolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedYtOutput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedBaseTokensSpent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_uniswapContract",
        type: "address",
      },
    ],
    name: "compoundUniswap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ytcContractAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_n",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_trancheAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_balancerPoolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedYtOutput",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expectedBaseTokensSpent",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldToken",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_zapperCallData",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "_zapperContract",
        type: "address",
      },
    ],
    name: "compoundZapper",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610de1806100206000396000f3fe6080604052600436106100295760003560e01c80631a63eb741461002e578063f0cc20e814610058575b600080fd5b61004161003c36600461093e565b61006b565b60405161004f929190610d2c565b60405180910390f35b610041610066366004610a16565b61010f565b6000803361dead1461007c57600080fd5b61008461083a565b6100958f8f8f8f8f8f8f8f8f610177565b905061009f610886565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408601949094525050506001600160a01b03861660608301526100f890839083906101d8565b9350935050509c509c9a5050505050505050505050565b6000803361dead1461012057600080fd5b61012861083a565b6101398e8e8e8e8e8e8e8e8e610177565b9050610143610886565b8581526001600160a01b0385166020820152610161828260016101d8565b9350935050509b509b9950505050505050505050565b61017f61083a565b61018761083a565b6001600160a01b039a8b16815260ff9990991660208a0152509588166040880152606087019490945260a0860191909152608085019190915260c0840152831660e083015290911661010082015290565b6000806000806101eb8760e00151610415565b90508461020f5761020a348860e00151886060015189604001516104b0565b610235565b846001141561023557610235348860e00151896080015189600001518a60200151610535565b61024c816102468960e00151610415565b906106a9565b9150600082116102775760405162461bcd60e51b815260040161026e90610c2b565b60405180910390fd5b866080015182101561029b5760405162461bcd60e51b815260040161026e90610c81565b5060e08601518651608088015160405163095ea7b360e01b81526001600160a01b039093169263095ea7b3926102d5929091600401610c12565b602060405180830381600087803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190610b6a565b5060008087600001516001600160a01b031663117d8d0b89602001518a604001518b606001518c608001518d60a001518e60c001516040518763ffffffff1660e01b815260040161037d96959493929190610d3a565b6040805180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610ba2565b60e08a015191935091506103ee906001600160a01b0316338386036106be565b610100880151610408906001600160a01b031633846106be565b9097909650945050505050565b60006001600160a01b03821661042c5750476104ab565b6040516370a0823160e01b81526001600160a01b038316906370a0823190610458903090600401610bfe565b60206040518083038186803b15801561047057600080fd5b505afa158015610484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a89190610b8a565b90505b919050565b6000826001600160a01b031685836040516104cb9190610bc5565b60006040518083038185875af1925050503d8060008114610508576040519150601f19603f3d011682016040523d82523d6000602084013e61050d565b606091505b505090508061052e5760405162461bcd60e51b815260040161026e90610c5d565b5050505050565b60408051600280825260608083018452849390929190602083019080368337019050509050816001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cb9190610922565b816000815181106105d857fe5b60200260200101906001600160a01b031690816001600160a01b031681525050858160018151811061060657fe5b6001600160a01b039283166020918202929092010152604051637ff36ab560e01b815290831690637ff36ab5908990610649908990869030908b90600401610cc3565b6000604051808303818588803b15801561066257600080fd5b505af1158015610676573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261069f9190810190610aca565b5050505050505050565b60006106b783836001610719565b9392505050565b6107148363a9059cbb60e01b84846040516024016106dd929190610c12565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261072f565b505050565b600061072884841115836107d5565b5050900390565b60006060836001600160a01b03168360405161074b9190610bc5565b6000604051808303816000865af19150503d8060008114610788576040519150601f19603f3d011682016040523d82523d6000602084013e61078d565b606091505b509150915060008214156107a5573d6000803e3d6000fd5b6107cf8151600014806107c75750818060200190518101906107c79190610b6a565b6101a26107d5565b50505050565b816107e3576107e3816107e7565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915290565b60405180608001604052806000815260200160006001600160a01b031681526020016060815260200160006001600160a01b031681525090565b80356104ab81610d93565b60008083601f8401126108dc578182fd5b5081356001600160401b038111156108f2578182fd5b60208301915083602082850101111561090a57600080fd5b9250929050565b803560ff811681146104ab57600080fd5b600060208284031215610933578081fd5b81516106b781610d93565b6000806000806000806000806000806000806101608d8f031215610960578788fd5b61096a8d35610d93565b8c359b5061097a60208e01610911565b9a5061098960408e0135610d93565b60408d0135995060608d0135985060808d0135975060a08d0135965060c08d013595506109b860e08e016108c0565b94506109c76101008e016108c0565b93506001600160401b036101208e013511156109e1578283fd5b6109f28e6101208f01358f016108cb565b9093509150610a046101408e016108c0565b90509295989b509295989b509295989b565b60008060008060008060008060008060006101608c8e031215610a37578081fd5b8b35610a4281610d93565b9a50610a5060208d01610911565b995060408c0135610a6081610d93565b985060608c0135975060808c0135965060a08c0135955060c08c0135945060e08c0135610a8c81610d93565b93506101008c0135610a9d81610d93565b92506101208c013591506101408c0135610ab681610d93565b809150509295989b509295989b9093969950565b60006020808385031215610adc578182fd5b82516001600160401b0380821115610af2578384fd5b818501915085601f830112610b05578384fd5b815181811115610b1157fe5b8381029150610b21848301610d70565b8181528481019084860184860187018a1015610b3b578788fd5b8795505b83861015610b5d578051835260019590950194918601918601610b3f565b5098975050505050505050565b600060208284031215610b7b578081fd5b815180151581146106b7578182fd5b600060208284031215610b9b578081fd5b5051919050565b60008060408385031215610bb4578182fd5b505080516020909101519092909150565b60008251815b81811015610be55760208186018101518583015201610bcb565b81811115610bf35782828501525b509190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526018908201527729bbb0b83832b2103a379024b73b30b634b2102a37b5b2b760411b604082015260600190565b6020808252600a908201526916985c0811985a5b195960b21b604082015260600190565b60208082526022908201527f4e6f7420656e6f75676820746f6b656e7320726563656976656420696e207377604082015261061760f41b606082015260800190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015610d0c5784516001600160a01b031683529383019391830191600101610ce7565b50506001600160a01b039690961660408501525050506060015292915050565b918252602082015260400190565b60ff9690961686526001600160a01b0394909416602086015260408501929092526060840152608083015260a082015260c00190565b6040518181016001600160401b0381118282101715610d8b57fe5b604052919050565b6001600160a01b0381168114610da857600080fd5b5056fea2646970667358221220708593974741e9779411bfc39008592a808ecbf80727e69231c1ddcce743806164736f6c63430007030033";

export class YTCZap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YTCZap> {
    return super.deploy(overrides || {}) as Promise<YTCZap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YTCZap {
    return super.attach(address) as YTCZap;
  }
  connect(signer: Signer): YTCZap__factory {
    return super.connect(signer) as YTCZap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YTCZapInterface {
    return new utils.Interface(_abi) as YTCZapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YTCZap {
    return new Contract(address, _abi, signerOrProvider) as YTCZap;
  }
}
