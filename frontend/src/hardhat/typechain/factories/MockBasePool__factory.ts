/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockBasePool, MockBasePoolInterface } from "../MockBasePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "specialization",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6103e06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162002a4338038062002a438339810160408190526200005a9162000a30565b6040805180820190915260018152603160f81b6020808301918252336080526001600160601b0319606085901b1660a0528951908a0190812060c0529151902060e0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101005287518a918a918a918a918a918a918a918a918a91849184918a918a91620000ed916003919062000842565b5080516200010390600490602084019062000842565b506200011b9150506276a70083111561019462000616565b6200012f62278d0082111561019562000616565b429091016101408190520161016052845162000151906002111560c862000616565b6200016960088651111560c96200061660201b60201c565b6200017f856200062b60201b62000a931760201c565b6200018a8462000637565b6040516309b2760f60e01b81526000906001600160a01b038b16906309b2760f90620001bb908c9060040162000bd8565b602060405180830381600087803b158015620001d657600080fd5b505af1158015620001eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000211919062000a17565b9050896001600160a01b03166366a9c7d2828889516001600160401b03811180156200023c57600080fd5b5060405190808252806020026020018201604052801562000267578160200160208202803683370190505b506040518463ffffffff1660e01b8152600401620002889392919062000b3e565b600060405180830381600087803b158015620002a357600080fd5b505af1158015620002b8573d6000803e3d6000fd5b5050506001600160601b031960608c901b1661018052506101a081905285516101c0528551620002ea57600062000301565b85600081518110620002f857fe5b60200260200101515b60601b6001600160601b0319166101e0528551600110620003245760006200033b565b856001815181106200033257fe5b60200260200101515b60601b6001600160601b0319166102005285516002106200035e57600062000375565b856002815181106200036c57fe5b60200260200101515b60601b6001600160601b03191661022052855160031062000398576000620003af565b85600381518110620003a657fe5b60200260200101515b60601b6001600160601b031916610240528551600410620003d2576000620003e9565b85600481518110620003e057fe5b60200260200101515b60601b6001600160601b0319166102605285516005106200040c57600062000423565b856005815181106200041a57fe5b60200260200101515b60601b6001600160601b031916610280528551600610620004465760006200045d565b856006815181106200045457fe5b60200260200101515b60601b6001600160601b0319166102a05285516007106200048057600062000497565b856007815181106200048e57fe5b60200260200101515b60601b6001600160601b0319166102c0528551620004b7576000620004dd565b620004dd86600081518110620004c957fe5b6020026020010151620006a660201b60201c565b6102e0528551600110620004f357600062000505565b6200050586600181518110620004c957fe5b6103005285516002106200051b5760006200052d565b6200052d86600281518110620004c957fe5b6103205285516003106200054357600062000555565b6200055586600381518110620004c957fe5b6103405285516004106200056b5760006200057d565b6200057d86600481518110620004c957fe5b61036052855160051062000593576000620005a5565b620005a586600581518110620004c957fe5b610380528551600610620005bb576000620005cd565b620005cd86600681518110620004c957fe5b6103a0528551600710620005e3576000620005f5565b620005f586600781518110620004c957fe5b6103c081815250505050505050505050505050505050505050505062000c30565b81620006275762000627816200074a565b5050565b8062000627816200079d565b6200064c64e8d4a5100082101560cb62000616565b6200066467016345785d8a000082111560ca62000616565b60078190556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200069b90839062000bed565b60405180910390a150565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620006e357600080fd5b505afa158015620006f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200071e919062000b14565b60ff16905060006200073d6012836200082a60201b62000aa11760201c565b600a0a925050505b919050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b600281511015620007ae5762000827565b600081600081518110620007be57fe5b602002602001015190506000600190505b825181101562000824576000838281518110620007e857fe5b6020026020010151905062000819816001600160a01b0316846001600160a01b03161060656200061660201b60201c565b9150600101620007cf565b50505b50565b60006200083c83831115600162000616565b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200088557805160ff1916838001178555620008b5565b82800160010185558215620008b5579182015b82811115620008b557825182559160200191906001019062000898565b50620008c3929150620008c7565b5090565b5b80821115620008c35760008155600101620008c8565b8051620007458162000c1a565b600082601f830112620008fc578081fd5b81516001600160401b038111156200091057fe5b60208082026200092282820162000bf6565b838152935081840185830182870184018810156200093f57600080fd5b600092505b848310156200096f5780516200095a8162000c1a565b82526001929092019190830190830162000944565b505050505092915050565b8051600381106200074557600080fd5b600082601f8301126200099b578081fd5b81516001600160401b03811115620009af57fe5b6020620009c5601f8301601f1916820162000bf6565b92508183528481838601011115620009dc57600080fd5b60005b82811015620009fc578481018201518482018301528101620009df565b8281111562000a0e5760008284860101525b50505092915050565b60006020828403121562000a29578081fd5b5051919050565b60008060008060008060008060006101208a8c03121562000a4f578485fd5b62000a5a8a620008de565b985062000a6a60208b016200097a565b60408b01519098506001600160401b038082111562000a87578687fd5b62000a958d838e016200098a565b985060608c015191508082111562000aab578687fd5b62000ab98d838e016200098a565b975060808c015191508082111562000acf578687fd5b5062000ade8c828d01620008eb565b95505060a08a0151935060c08a0151925060e08a0151915062000b056101008b01620008de565b90509295985092959850929598565b60006020828403121562000b26578081fd5b815160ff8116811462000b37578182fd5b9392505050565b60006060820185835260206060818501528186518084526080860191508288019350845b8181101562000b895784516001600160a01b03168352938301939183019160010162000b62565b505084810360408601528551808252908201925081860190845b8181101562000bca5782516001600160a01b03168552938301939183019160010162000ba3565b509298975050505050505050565b602081016003831062000be757fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000c1257fe5b604052919050565b6001600160a01b03811681146200082757600080fd5b60805160a05160601c60c05160e051610100516101205161014051610160516101805160601c6101a0516101c0516101e05160601c6102005160601c6102205160601c6102405160601c6102605160601c6102805160601c6102a05160601c6102c05160601c6102e05161030051610320516103405161036051610380516103a0516103c051611d0162000d42600039806112145250806111d152508061118e52508061114b5250806111085250806110c55250806110825250806110315250505050505050505080610e0d5250806104fe52508061072d525080610c0e525080610bea5250806107fc525080610cff525080610d41525080610d205250806107095250806106935250611d016000f3fe608060405234801561001057600080fd5b50600436106101595760003560e01c806370a08231116100c957806370a082311461026457806374f3b009146102775780637ecebe0014610298578063851c1bb3146102ab57806387ec6817146102be578063893d20e8146102d15780638d928af8146102e657806395d89b41146102ee578063a9059cbb146102f6578063aaabadc514610309578063d505accf14610311578063d5c096c414610324578063d73dd62314610337578063dd62ed3e1461034a57610159565b806306fdde031461015e578063095ea7b31461017c57806316c38b3c1461019c57806318160ddd146101b15780631c0de051146101c657806323b872dd146101dd578063313ce567146101f05780633644e5151461020557806338e9922e1461020d57806338fff2d01461022057806355c67628146102285780636028bfd4146102305780636618846314610251575b600080fd5b61016661035d565b6040516101739190611be3565b60405180910390f35b61018f61018a366004611895565b6103f4565b6040516101739190611b1a565b6101af6101aa3660046118c0565b61040b565b005b6101b961041f565b6040516101739190611b3d565b6101ce610425565b60405161017393929190611b25565b61018f6101eb3660046117e0565b61044e565b6101f86104cf565b6040516101739190611c57565b6101b96104d4565b6101af61021b366004611a43565b6104e3565b6101b96104fc565b6101b9610520565b61024361023e3660046118f8565b610526565b604051610173929190611c36565b61018f61025f366004611895565b61055d565b6101b961027236600461178c565b6105b7565b61028a6102853660046118f8565b6105d2565b604051610173929190611aec565b6101b96102a636600461178c565b610674565b6101b96102b93660046119ff565b61068f565b6102436102cc3660046118f8565b6106e1565b6102d9610707565b6040516101739190611ad8565b6102d961072b565b61016661074f565b61018f610304366004611895565b6107b0565b6102d96107bd565b6101af61031f366004611820565b6107c7565b61028a6103323660046118f8565b610910565b61018f610345366004611895565b610a32565b6101b96103583660046117a8565b610a68565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b505050505090505b90565b6000610401338484610ab7565b5060015b92915050565b610413610b1f565b61041c81610b4d565b50565b60025490565b6000806000610432610bcb565b15925061043d610be8565b9150610447610c0c565b9050909192565b6001600160a01b0383166000818152600160209081526040808320338085529252822054919261048c9114806104845750838210155b610197610c30565b610497858585610c3e565b336001600160a01b038616148015906104b257506000198114155b156104c4576104c48533858403610ab7565b506001949350505050565b601290565b60006104de610cfb565b905090565b6104eb610b1f565b6104f3610d98565b61041c81610dad565b7f000000000000000000000000000000000000000000000000000000000000000090565b60075490565b6000606061053c8651610537610e0b565b610e2f565b61055189898989898989610e3c610e4e610eb4565b97509795505050505050565b3360009081526001602090815260408083206001600160a01b03861684529091528120548083106105995761059433856000610ab7565b6105ad565b6105ad33856105a88487610aa1565b610ab7565b5060019392505050565b6001600160a01b031660009081526020819052604090205490565b606080886105fc6105e161072b565b6001600160a01b0316336001600160a01b03161460cd610c30565b6106116106076104fc565b82146101f4610c30565b606061061b610fd6565b90506106278882611252565b600060608061063b8e8e8e8e8e8e8e610e3c565b92509250925061064b8d846112b3565b6106558285610e4e565b61065f8185610e4e565b909550935050505b5097509795505050505050565b6001600160a01b031660009081526005602052604090205490565b60007f0000000000000000000000000000000000000000000000000000000000000000826040516020016106c4929190611a95565b604051602081830303815290604052805190602001209050919050565b600060606106f28651610537610e0b565b61055189898989898989610e3c611334610eb4565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103e95780601f106103be576101008083540402835291602001916103e9565b6000610401338484610c3e565b60006104de611395565b6107d58442111560d1610c30565b6001600160a01b038716600090815260056020908152604080832054905190929161082c917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d9101611b65565b604051602081830303815290604052805190602001209050600061084f8261140f565b90506000600182888888604051600081526020016040526040516108769493929190611bc5565b6020604051602081039080840390855afa158015610898573d6000803e3d6000fd5b5050604051601f19015191506108da90506001600160a01b038216158015906108d257508b6001600160a01b0316826001600160a01b0316145b6101f8610c30565b6001600160a01b038b1660009081526005602052604090206001850190556109038b8b8b610ab7565b5050505050505050505050565b6060808861091f6105e161072b565b61092a6106076104fc565b6060610934610fd6565b905061093e61041f565b6109e357600060606109528d8d8d8a61142b565b91509150610967620f424083101560cc610c30565b6109756000620f4240611438565b6109848b620f42408403611438565b61098e8184611334565b80610997610e0b565b6001600160401b03811180156109ac57600080fd5b506040519080825280602002602001820160405280156109d6578160200160208202803683370190505b5095509550505050610667565b6109ed8882611252565b6000606080610a018e8e8e8e8e8e8e610e3c565b925092509250610a118c84611438565b610a1b8285611334565b610a258185610e4e565b9095509350610667915050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916104019185906105a890866114bc565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b80610a9d816114d5565b5050565b6000610ab1838311156001610c30565b50900390565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610b12908590611b3d565b60405180910390a3505050565b6000610b366000356001600160e01b03191661068f565b905061041c610b45823361154e565b610191610c30565b8015610b6d57610b68610b5e610be8565b4210610193610c30565b610b82565b610b82610b78610c0c565b42106101a9610c30565b6006805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490610bc0908390611b1a565b60405180910390a150565b6000610bd5610c0c565b4211806104de57505060065460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b81610a9d57610a9d8161163e565b6001600160a01b038316600090815260208190526040902054610c6682821015610196610c30565b610c7d6001600160a01b0384161515610199610c30565b6001600160a01b03808516600090815260208190526040808220858503905591851681522054610cad90836114bc565b6001600160a01b038085166000818152602081905260409081902093909355915190861690600080516020611cac83398151915290610ced908690611b3d565b60405180910390a350505050565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610d68611691565b30604051602001610d7d959493929190611b99565b60405160208183030381529060405280519060200120905090565b610dab610da3610bcb565b610192610c30565b565b610dc064e8d4a5100082101560cb610c30565b610dd667016345785d8a000082111560ca610c30565b60078190556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90610bc0908390611b3d565b7f000000000000000000000000000000000000000000000000000000000000000090565b610a9d8183146067610c30565b60006060809750975097945050505050565b60005b610e59610e0b565b811015610eaf57610e90838281518110610e6f57fe5b6020026020010151838381518110610e8357fe5b6020026020010151611695565b838281518110610e9c57fe5b6020908102919091010152600101610e51565b505050565b333014610f72576000306001600160a01b0316600036604051610ed8929190611aad565b6000604051808303816000865af19150503d8060008114610f15576040519150601f19603f3d011682016040523d82523d6000602084013e610f1a565b606091505b505090508060008114610f2957fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114610f54573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b6060610f7c610fd6565b9050610f888782611252565b60006060610f9f8c8c8c8c8c8c8c8c63ffffffff16565b5091509150610fb281848663ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b60606000610fe2610e0b565b90506060816001600160401b0381118015610ffc57600080fd5b50604051908082528060200260200182016040528015611026578160200160208202803683370190505b509050811561106e577f00000000000000000000000000000000000000000000000000000000000000008160008151811061105d57fe5b602002602001018181525050611077565b91506103f19050565b600182111561106e577f0000000000000000000000000000000000000000000000000000000000000000816001815181106110ae57fe5b602002602001018181525050600282111561106e577f0000000000000000000000000000000000000000000000000000000000000000816002815181106110f157fe5b602002602001018181525050600382111561106e577f00000000000000000000000000000000000000000000000000000000000000008160038151811061113457fe5b602002602001018181525050600482111561106e577f00000000000000000000000000000000000000000000000000000000000000008160048151811061117757fe5b602002602001018181525050600582111561106e577f0000000000000000000000000000000000000000000000000000000000000000816005815181106111ba57fe5b602002602001018181525050600682111561106e577f0000000000000000000000000000000000000000000000000000000000000000816006815181106111fd57fe5b602002602001018181525050600782111561106e577f00000000000000000000000000000000000000000000000000000000000000008160078151811061124057fe5b60200260200101818152505091505090565b60005b61125d610e0b565b811015610eaf5761129483828151811061127357fe5b602002602001015183838151811061128757fe5b60200260200101516116b5565b8382815181106112a057fe5b6020908102919091010152600101611255565b6001600160a01b0382166000908152602081905260409020546112db82821015610196610c30565b6001600160a01b038316600090815260208190526040902082820390556002546113059083610aa1565b6002556040516000906001600160a01b03851690600080516020611cac83398151915290610b12908690611b3d565b60005b61133f610e0b565b811015610eaf5761137683828151811061135557fe5b602002602001015183838151811061136957fe5b60200260200101516116d9565b83828151811061138257fe5b6020908102919091010152600101611337565b600061139f61072b565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156113d757600080fd5b505afa1580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190611a27565b6000611419610cfb565b826040516020016106c4929190611abd565b6000606094509492505050565b6001600160a01b03821660009081526020819052604090205461145b90826114bc565b6001600160a01b03831660009081526020819052604090205560025461148190826114bc565b6002556040516001600160a01b03831690600090600080516020611cac833981519152906114b0908590611b3d565b60405180910390a35050565b60008282016114ce8482101583610c30565b9392505050565b6002815110156114e45761041c565b6000816000815181106114f357fe5b602002602001015190506000600190505b8251811015610eaf57600083828151811061151b57fe5b60200260200101519050611544816001600160a01b0316846001600160a01b0316106065610c30565b9150600101611504565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b61156d610707565b6001600160a01b03161415801561158857506115888361170c565b156115b057611595610707565b6001600160a01b0316336001600160a01b0316149050610405565b6115b8611395565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b81526004016115e793929190611b46565b60206040518083038186803b1580156115ff57600080fd5b505afa158015611613573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163791906118dc565b9050610405565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b4690565b60006116a48215156004610c30565b8183816116ad57fe5b049392505050565b60008282026114ce8415806116d25750838583816116cf57fe5b04145b6003610c30565b60006116e88215156004610c30565b826116f557506000610405565b81600184038161170157fe5b046001019050610405565b600061171e631c74c91760e11b61068f565b909114919050565b600082601f830112611736578081fd5b81356001600160401b0381111561174957fe5b61175c601f8201601f1916602001611c65565b915080825283602082850101111561177357600080fd5b8060208401602084013760009082016020015292915050565b60006020828403121561179d578081fd5b81356114ce81611c88565b600080604083850312156117ba578081fd5b82356117c581611c88565b915060208301356117d581611c88565b809150509250929050565b6000806000606084860312156117f4578081fd5b83356117ff81611c88565b9250602084013561180f81611c88565b929592945050506040919091013590565b600080600080600080600060e0888a03121561183a578283fd5b873561184581611c88565b9650602088013561185581611c88565b95506040880135945060608801359350608088013560ff81168114611878578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156118a7578182fd5b82356118b281611c88565b946020939093013593505050565b6000602082840312156118d1578081fd5b81356114ce81611c9d565b6000602082840312156118ed578081fd5b81516114ce81611c9d565b600080600080600080600060e0888a031215611912578283fd5b8735965060208089013561192581611c88565b9650604089013561193581611c88565b955060608901356001600160401b0380821115611950578586fd5b818b0191508b601f830112611963578586fd5b81358181111561196f57fe5b61197c8485830201611c65565b8082825285820191508585018f87888602880101111561199a57898afd5b8995505b838610156119bc57803583526001959095019491860191860161199e565b509850505060808b0135955060a08b0135945060c08b01359250808311156119e2578384fd5b50506119f08a828b01611726565b91505092959891949750929550565b600060208284031215611a10578081fd5b81356001600160e01b0319811681146114ce578182fd5b600060208284031215611a38578081fd5b81516114ce81611c88565b600060208284031215611a54578081fd5b5035919050565b6000815180845260208085019450808401835b83811015611a8a57815187529582019590820190600101611a6e565b509495945050505050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b600060408252611aff6040830185611a5b565b8281036020840152611b118185611a5b565b95945050505050565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6000602080835283518082850152825b81811015611c0f57858101830151858201604001528201611bf3565b81811115611c205783604083870101525b50601f01601f1916929092016040019392505050565b600083825260406020830152611c4f6040830184611a5b565b949350505050565b60ff91909116815260200190565b6040518181016001600160401b0381118282101715611c8057fe5b604052919050565b6001600160a01b038116811461041c57600080fd5b801515811461041c57600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212207c079c74d23644726a4f9ea8d38a799235cd888c19db872fa22d0ce66be4caf064736f6c63430007030033";

export class MockBasePool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBasePool> {
    return super.deploy(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    ) as Promise<MockBasePool>;
  }
  getDeployTransaction(
    vault: string,
    specialization: BigNumberish,
    name: string,
    symbol: string,
    tokens: string[],
    swapFeePercentage: BigNumberish,
    pauseWindowDuration: BigNumberish,
    bufferPeriodDuration: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      specialization,
      name,
      symbol,
      tokens,
      swapFeePercentage,
      pauseWindowDuration,
      bufferPeriodDuration,
      owner,
      overrides || {}
    );
  }
  attach(address: string): MockBasePool {
    return super.attach(address) as MockBasePool;
  }
  connect(signer: Signer): MockBasePool__factory {
    return super.connect(signer) as MockBasePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBasePoolInterface {
    return new utils.Interface(_abi) as MockBasePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBasePool {
    return new Contract(address, _abi, signerOrProvider) as MockBasePool;
  }
}
