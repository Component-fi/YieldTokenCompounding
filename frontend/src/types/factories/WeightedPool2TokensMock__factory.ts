/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedPool2TokensMock,
  WeightedPool2TokensMockInterface,
} from "../WeightedPool2TokensMock";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IVault",
            name: "vault",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token0",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "normalizedWeight0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedWeight1",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFeePercentage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pauseWindowDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bufferPeriodDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "oracleEnabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct WeightedPool2Tokens.NewPoolParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "OracleEnabledChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newSample",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sampleIndex",
        type: "uint256",
      },
    ],
    name: "PriceDataProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "bptTotalSupplyLn",
        type: "int256",
      },
    ],
    name: "calcLogBPTPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "normalizedWeightA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeightB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceB",
        type: "uint256",
      },
    ],
    name: "calcLogSpotPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sample",
        type: "bytes32",
      },
    ],
    name: "decode",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "sample",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "dates",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "findNearestSamplesTimestamp",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "prev",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "next",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.BinarySearchResult[]",
        name: "results",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "fromLowResLog",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLargestSafeQueryWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPriceOracle.Variable",
        name: "variable",
        type: "uint8",
      },
    ],
    name: "getLatest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMiscData",
    outputs: [
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logTotalSupply",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "oracleSampleCreationTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "oracleIndex",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "oracleEnabled",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNormalizedWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPriceOracle.Variable",
        name: "variable",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPastAccumulator",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPriceOracle.Variable",
            name: "variable",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "ago",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.OracleAccumulatorQuery[]",
        name: "queries",
        type: "tuple[]",
      },
    ],
    name: "getPastAccumulators",
    outputs: [
      {
        internalType: "int256[]",
        name: "results",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSample",
    outputs: [
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "accLogInvariant",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IPriceOracle.Variable",
            name: "variable",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "secs",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ago",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.OracleAverageQuery[]",
        name: "queries",
        type: "tuple[]",
      },
    ],
    name: "getTimeWeightedAverage",
    outputs: [
      {
        internalType: "uint256[]",
        name: "results",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSamples",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logTotalSupply",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "oracleSampleCreationTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oracleIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "oracleEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "swapFeePercentage",
            type: "uint256",
          },
        ],
        internalType: "struct WeightedPool2TokensMock.MiscData",
        name: "miscData",
        type: "tuple",
      },
    ],
    name: "mockMiscData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockOracleDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "mockOracleIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "sample",
        type: "tuple",
      },
    ],
    name: "mockSample",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "indexes",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample[]",
        name: "samples",
        type: "tuple[]",
      },
    ],
    name: "mockSamples",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "balanceTokenIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceTokenOut",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elapsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
    ],
    name: "processPriceData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toLowResLog",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sample",
        type: "bytes32",
      },
      {
        internalType: "int256",
        name: "logPairPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logBptPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "logInvariant",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "update",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "logPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogPairPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogBptPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "logInvariant",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "accLogInvariant",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PoolPriceOracleMock.Sample",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102a06040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b5060405162006065380380620060658339810160408190526200005a916200080a565b61010081810151610120830151602080850151604080870151815180830190925260018252603160f81b8285019081526101608901513360805260601b6001600160601b03191660a052835194840194852060c052915190912060e0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f909552805186959192620000f091600391906200069d565b508051620001069060049060208401906200069d565b506200011e9150506276a70083111561019462000408565b6200013262278d0082111561019562000408565b4290910161014081815291016101605281015162000150906200041d565b60e0810151620001609062000479565b80516040516309b2760f60e01b81526000916001600160a01b0316906309b2760f90620001939060029060040162000a10565b602060405180830381600087803b158015620001ae57600080fd5b505af1158015620001c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001e99190620007f1565b6040805160028082526060808301845293945090916020830190803683370190505090508260600151816000815181106200022057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508260800151816001815181106200025357fe5b6001600160a01b0392831660209182029290920101528351166366a9c7d2838360026040519080825280602002602001820160405280156200029f578160200160208202803683370190505b506040518463ffffffff1660e01b8152600401620002c09392919062000974565b600060405180830381600087803b158015620002db57600080fd5b505af1158015620002f0573d6000803e3d6000fd5b505084516001600160601b0319606091821b8116610180526101a08690528187018051831b82166101c052608088015190921b166101e052516200033792509050620004f7565b6102605260808301516200034b90620004f7565b6102805260a08301516200036c90662386f26fc10000111561012e62000408565b6200038e662386f26fc100008460c00151101561012e6200040860201b60201c565b6000620003b28460c001518560a001516200059960201b620016eb1790919060201c565b9050620003cc670de0b6b3a7640000821461013462000408565b60a0840180516102005260c085018051610220525190511015620003f2576001620003f5565b60005b60ff16610240525062000a619350505050565b8162000419576200041981620005b6565b5050565b62000439816008546200060960201b620016fd1790919060201c565b6008556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead1906200046e90839062000969565b60405180910390a150565b6200048e64e8d4a5100082101560cb62000408565b620004a667016345785d8a000082111560ca62000408565b620004c2816008546200062860201b6200170b1790919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906200046e90839062000a25565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200053457600080fd5b505afa15801562000549573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200056f919062000946565b60ff16905060006200058e6012836200064760201b620017191760201c565b600a0a949350505050565b6000828201620005ad848210158362000408565b90505b92915050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000620005ad826055856200065f60201b6200172f179092919060201c565b6000620005ad826056856200068860201b62001756179092919060201c565b60006200065983831115600162000408565b50900390565b60006001821b1984168284620006775760006200067a565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620006e057805160ff191683800117855562000710565b8280016001018555821562000710579182015b8281111562000710578251825591602001919060010190620006f3565b506200071e92915062000722565b5090565b5b808211156200071e576000815560010162000723565b80516001600160a01b0381168114620005b057600080fd5b80518015158114620005b057600080fd5b600082601f83011262000773578081fd5b81516001600160401b0381111562000789578182fd5b60206200079f601f8301601f1916820162000a2e565b92508183528481838601011115620007b657600080fd5b60005b82811015620007d6578481018201518482018301528101620007b9565b82811115620007e85760008284860101525b50505092915050565b60006020828403121562000803578081fd5b5051919050565b6000602082840312156200081c578081fd5b81516001600160401b038082111562000833578283fd5b81840191506101808083870312156200084a578384fd5b620008558162000a2e565b905062000863868462000739565b815260208301518281111562000877578485fd5b620008858782860162000762565b6020830152506040830151828111156200089d578485fd5b620008ab8782860162000762565b604083015250620008c0866060850162000739565b6060820152620008d4866080850162000739565b608082015260a0838101519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101409150620009208683850162000751565b828201526101609150620009378683850162000739565b91810191909152949350505050565b60006020828403121562000958578081fd5b815160ff81168114620005ad578182fd5b901515815260200190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015620009c057620009ad855162000a55565b8352938301939183019160010162000998565b505084810360408601528551808252908201925081860190845b8181101562000a0257620009ef835162000a55565b85529383019391830191600101620009da565b509298975050505050505050565b602081016003831062000a1f57fe5b91905290565b90815260200190565b6040518181016001600160401b038111828210171562000a4d57600080fd5b604052919050565b6001600160a01b031690565b60805160a05160601c60c05160e051610100516101205161014051610160516101805160601c6101a0516101c05160601c6101e05160601c610200516102205161024051610260516102805161552c62000b39600039806122e352508061230a525080613164528061319852806131d452508061233752806123d352508061235e52806123b1528061240152505080610f3a525080610a89525080610e885250806118c252508061189e525080611380525080611bc4525080611c06525080611be5525080610e64525080610def525061552c6000f3fe608060405234801561001057600080fd5b506004361061035d5760003560e01c80637ecebe00116101d3578063bf33866611610104578063d5c096c4116100a2578063e5fe5f3c1161007c578063e5fe5f3c14610735578063f89f27ed14610748578063ff7b6f1e14610750578063ffd088eb146107635761035d565b8063d5c096c4146106fc578063d73dd6231461070f578063dd62ed3e146107225761035d565b8063c519a075116100de578063c519a075146106a3578063d4376804146106b6578063d505accf146106d6578063d5125db6146106e95761035d565b8063bf33866614610668578063c0ff1a151461067b578063c3748ef1146106835761035d565b80639d2c110c11610171578063abb9d0d51161014b578063abb9d0d514610627578063b10be7391461063a578063b48b5b401461064d578063be7a6d1e146106555761035d565b80639d2c110c146105f9578063a9059cbb1461060c578063aaabadc51461061f5761035d565b8063893d20e8116101ad578063893d20e8146105cc5780638d928af8146105e157806395d89b41146105e95780639b02cdde146105f15761035d565b80637ecebe0014610593578063851c1bb3146105a657806387ec6817146105b95761035d565b806338e9922e116102ad57806360d1507c1161024b57806368a54df21161022557806368a54df21461052c5780636b8432391461053f57806370a082311461055f57806374f3b009146105725761035d565b806360d1507c146104eb5780636618846314610511578063679aefce146105245761035d565b80634a6b0b15116102875780634a6b0b151461049557806355c67628146104af57806357aad013146104b75780636028bfd4146104ca5761035d565b806338e9922e1461046757806338fff2d01461047a5780633d48f8c1146104825761035d565b806323b872dd1161031a578063292c914a116102f4578063292c914a1461043a5780633081bfee14610442578063313ce5671461044a5780633644e5151461045f5761035d565b806323b872dd14610401578063259efd1614610414578063264959fb146104275761035d565b806306fdde0314610362578063095ea7b31461038057806316c38b3c146103a057806318160ddd146103b55780631c0de051146103ca5780631dccd830146103e1575b600080fd5b61036a61076b565b60405161037791906153b9565b60405180910390f35b61039361038e3660046148e1565b610801565b6040516103779190615286565b6103b36103ae366004614c55565b610818565b005b6103bd61082c565b60405161037791906152b9565b6103d2610832565b604051610377939291906152a1565b6103f46103ef366004614a95565b61085b565b604051610377919061524e565b61039361040f36600461482c565b610963565b6103b36104223660046150a1565b6109e6565b6103bd610435366004614ef4565b610a05565b6103b3610a1c565b6103b3610a50565b610452610a5a565b6040516103779190615473565b6103bd610a5f565b6103b3610475366004614c8d565b610a6e565b6103bd610a87565b6103bd610490366004614f8b565b610aab565b61049d610ae0565b6040516103779695949392919061538f565b6103bd610b3b565b6103bd6104c5366004614c8d565b610b48565b6104dd6104d8366004614ca5565b610b53565b60405161037792919061545a565b6104fe6104f9366004614c8d565b610b84565b604051610377979695949392919061535f565b61039361051f3660046148e1565b610bcd565b6103bd610c27565b6103b361053a366004614c8d565b610c4c565b61055261054d3660046149d7565b610c5f565b60405161037791906151bb565b6103bd61056d3660046147d8565b610d10565b610585610580366004614ca5565b610d2b565b604051610377929190615261565b6103bd6105a13660046147d8565b610dd0565b6103bd6105b4366004614d81565b610deb565b6104dd6105c7366004614ca5565b610e3d565b6105d4610e62565b60405161037791906151a7565b6105d4610e86565b61036a610eaa565b6103bd610f0b565b6103bd610607366004614fa6565b610f11565b61039361061a3660046148e1565b6110c0565b6105d46110cd565b6103bd610635366004614c8d565b6110d7565b6103bd610648366004614ed8565b6110e2565b6103bd611104565b6103bd6106633660046150ce565b61110a565b6103b3610676366004614f28565b611117565b6103bd611120565b610696610691366004614c8d565b6111dc565b604051610377919061540c565b6103bd6106b13660046150f9565b611261565b6106c96106c4366004614c13565b611278565b60405161037791906151ff565b6103b36106e436600461486c565b61134b565b6103b36106f7366004614d47565b611494565b61058561070a366004614ca5565b6114ee565b61039361071d3660046148e1565b61160e565b6103bd6107303660046147f4565b611644565b6103b3610743366004614b4f565b61166f565b6103f46116b8565b61069661075e366004614d47565b6116c2565b6103bd6116e4565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107f75780601f106107cc576101008083540402835291602001916107f7565b820191906000526020600020905b8154815290600101906020018083116107da57829003601f168201915b5050505050905090565b600061080e33848461176b565b5060015b92915050565b6108206117d3565b61082981611801565b50565b60025490565b600080600061083f61187f565b15925061084a61189c565b91506108546118c0565b9050909192565b606081516001600160401b038111801561087457600080fd5b5060405190808252806020026020018201604052801561089e578160200160208202803683370190505b50905060006108ae6008546118e4565b90506108b861458c565b60005b845181101561095b578481815181106108d057fe5b602002602001015191506108ee82602001516000141561013c6118f1565b60006109098360000151858560200151866040015101611903565b905060006109208460000151868660400151611903565b905061093a84602001518383038161093457fe5b05611a49565b86848151811061094657fe5b602090810291909101015250506001016108bb565b505050919050565b6001600160a01b038316600081815260016020908152604080832033808552925282205491926109a19114806109995750838210155b6101976118f1565b6109ac858585611a5c565b336001600160a01b038616148015906109c757506000198114155b156109d9576109d9853385840361176b565b60019150505b9392505050565b6109ef81610aab565b6000928352600760205260409092209190915550565b6000610a148484844203611903565b949350505050565b610a24611b2b565b610a2c6117d3565b610a366001611b3e565b6000610a4061082c565b1115610a4e57610a4e611b7e565b565b610a4e6000611b3e565b601290565b6000610a69611bc0565b905090565b610a766117d3565b610a7e611b2b565b61082981611c5d565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610ad8826000015183602001518460400151856060015186608001518760a001518860c00151611cc6565b90505b919050565b60008060008060008060006008549050610af981611d26565b9650610b0481611d32565b9550610b0f81611d3f565b9450610b1a816118e4565b9350610b2581611d4c565b9250610b3081611d59565b915050909192939495565b6000610a69600854611d59565b6000610ad882611d66565b60006060610b6386516002611daa565b610b7889898989898989611db7611e71611eef565b97509795505050505050565b6000806000806000806000610b9f610400891061013b6118f1565b6000610baa8961200e565b9050610bb581612020565b959f949e50929c50909a509850965090945092505050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054808310610c0957610c043385600061176b565b610c1d565b610c1d3385610c188487611719565b61176b565b5060019392505050565b6000610a69610c3461082c565b610c46610c3f611120565b6002612083565b906120a7565b600854610c5990826120f8565b60085550565b606081516001600160401b0381118015610c7857600080fd5b50604051908082528060200260200182016040528015610ca2578160200160208202803683370190505b5090506000610cb26008546118e4565b9050610cbc6145ae565b60005b845181101561095b57848181518110610cd457fe5b60200260200101519150610cf18260000151848460200151611903565b848281518110610cfd57fe5b6020908102919091010152600101610cbf565b6001600160a01b031660009081526020819052604090205490565b60608088610d55610d3a610e86565b6001600160a01b0316336001600160a01b03161460cd6118f1565b610d6a610d60610a87565b82146101f46118f1565b610d7387612106565b6000606080610d878d8d8d8d8d8d8d611db7565b925092509250610d978c84612168565b610da082611e71565b610da981611e71565b610db161187f565b15610dbe57610dbe611b7e565b909c909b509950505050505050505050565b6001600160a01b031660009081526005602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610e20929190615164565b604051602081830303815290604052805190602001209050919050565b60006060610e4d86516002611daa565b610b78898989898989896121fb61227c611eef565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107f75780601f106107cc576101008083540402835291602001916107f7565b60095490565b6000610f1b611b2b565b8360800151610f2b610d3a610e86565b610f36610d60610a87565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686602001516001600160a01b03161490506000610f7e826122da565b90506000610f8c83156122da565b90506000610f998461232e565b90506000610fa7851561232e565b9050610fb38985612382565b9850610fbf8884612382565b9750610fe88a60a0015186610fd45789610fd6565b8a5b87610fe1578b610fe3565b8a5b61238e565b60008a516001811115610ff757fe5b141561106557600061101561100a610b3b565b60608d015190612494565b9050611037611031828d6060015161171990919063ffffffff16565b86612382565b60608c0152600061104b8c8c8c87876124d8565b905061105781866124eb565b9850505050505050506110b8565b6110738a6060015184612382565b60608b015260006110878b8b8b86866124f7565b9050611093818661250a565b90506110af6110a86110a3610b3b565b612516565b829061253c565b97505050505050505b509392505050565b600061080e338484611a5c565b6000610a6961257e565b6000610ad882611a49565b6000806110f9836110f46008546118e4565b6125f8565b90506109df81611a49565b61040090565b6000610a14848484612627565b610c5981612643565b6000606061112c610e86565b6001600160a01b031663f94d4668611142610a87565b6040518263ffffffff1660e01b815260040161115e91906152b9565b60006040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111b2919081019061490c565b509150506111bf81612106565b60606111c96126d0565b90506111d5818361273e565b9250505090565b6111e46145c5565b6040805160e08101909152806111fb8460006127b0565b815260200161120b8460006127fb565b815260200161121b8460016127b0565b815260200161122b8460016127fb565b815260200161123b8460026127b0565b815260200161124b8460026127fb565b81526020016112598461283f565b905292915050565b600061126f8585858561284b565b95945050505050565b606082516001600160401b038111801561129157600080fd5b506040519080825280602002602001820160405280156112cb57816020015b6112b8614602565b8152602001906001900390816112b05790505b50905060005b8351811015611344576000806112fa8684815181106112ec57fe5b602002602001015186612876565b9150915060405180604001604052806113128461283f565b81526020016113208361283f565b81525084848151811061132f57fe5b602090810291909101015250506001016112d1565b5092915050565b6113598442111560d16118f1565b6001600160a01b03871660009081526005602090815260408083205490519092916113b0917f0000000000000000000000000000000000000000000000000000000000000000918c918c918c9188918d91016152e1565b60405160208183030381529060405280519060200120905060006113d382612929565b90506000600182888888604051600081526020016040526040516113fa9493929190615341565b6020604051602081039080840390855afa15801561141c573d6000803e3d6000fd5b5050604051601f190151915061145e90506001600160a01b0382161580159061145657508b6001600160a01b0316826001600160a01b0316145b6101f86118f1565b6001600160a01b038b1660009081526005602052604090206001850190556114878b8b8b61176b565b5050505050505050505050565b4285900360006114a78287878787612945565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516114dd929190615291565b60405180910390a150505050505050565b606080886114fd610d3a610e86565b611508610d60610a87565b611510611b2b565b600061151a61082c565b61158a5761152a8b8b8b8861299c565b9450905061153f620f424082101560cc6118f1565b61154d6000620f4240612a25565b61155c89620f42408303612a25565b6115658461227c565b60408051600280825260608201835290916020830190803683370190505092506115f8565b61159388612106565b6115c687896000815181106115a457fe5b60200260200101518a6001815181106115b957fe5b602002602001015161238e565b6115d58b8b8b8b8b8b8b6121fb565b909550935090506115e68982612a25565b6115ef8461227c565b6115f883611e71565b611600611b7e565b505097509795505050505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161080e918590610c1890866116eb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60005b82518110156116b3576116ab83828151811061168a57fe5b602002602001015183838151811061169e57fe5b60200260200101516109e6565b600101611672565b505050565b6060610a696126d0565b6116ca6145c5565b6116da6106918787878787612abb565b9695505050505050565b6201de2090565b60008282016109df84821015836118f1565b60006109df8383605561172f565b60006109df83836056611756565b60006117298383111560016118f1565b50900390565b60006001821b1984168284611745576000611748565b60015b60ff16901b17949350505050565b6001600160401b03811b1992909216911b1790565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906117c69085906152b9565b60405180910390a3505050565b60006117ea6000356001600160e01b031916610deb565b90506108296117f98233612b1b565b6101916118f1565b80156118215761181c61181261189c565b42106101936118f1565b611836565b61183661182c6118c0565b42106101a96118f1565b6006805460ff19168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611874908390615286565b60405180910390a150565b60006118896118c0565b421180610a6957505060065460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610ad882604b612c04565b816118ff576118ff81612c0c565b5050565b6000611914824210156101386118f1565b4282900360006119238561200e565b905060006119308261283f565b9050611941600082116101396118f1565b82811161196d5780830380611956848a6127b0565b02611961848a6127fb565b019450505050506109df565b600061197887612c5f565b905060006119858261200e565b905060006119928261283f565b90506119a3600082116101396118f1565b6119b28682111561013a6118f1565b50506000806119c18684612876565b9150915060006119d08361283f565b6119d98361283f565b0390508015611a315760006119ee848d6127fb565b6119f8848e6127fb565b0390506000611a068561283f565b890390508281830281611a1557fe5b05611a20868f6127fb565b0199505050505050505050506109df565b611a3b838c6127fb565b9750505050505050506109df565b6000610ad8655af3107a40008302612c6c565b6001600160a01b038316600090815260208190526040902054611a84828210156101966118f1565b611a9b6001600160a01b03841615156101996118f1565b6001600160a01b03808516600090815260208190526040808220858503905591851681522054611acb90836116eb565b6001600160a01b0380851660008181526020819052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611b1d9086906152b9565b60405180910390a350505050565b610a4e611b3661187f565b6101926118f1565b600854611b4b90826116fd565b6008556040517f3e350b41e86a8e10f804ade6d35340d620be35569cc75ac943e8bb14ab80ead190611874908390615286565b600854611b8a81611d4c565b1561082957611ba4611b9d600954611d66565b8290613049565b9050610c59611bb9611bb461082c565b611d66565b8290613056565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611c2d613064565b30604051602001611c42959493929190615315565b60405160208183030381529060405280519060200120905090565b611c7064e8d4a5100082101560cb6118f1565b611c8667016345785d8a000082111560ca6118f1565b600854611c93908261170b565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc906118749083906152b9565b6000611cd28282613068565b611cdd84601f61306c565b611ce886605461307d565b611cf388606a61306c565b611cfe8a609f61307d565b611d098c60b561306c565b611d148e60ea61307d565b17171717171798975050505050505050565b6000610ad8828261308a565b6000610ad882601661308a565b6000610ad882602c6130b1565b6000610ad88260556130bb565b6000610ad88260566130c5565b600080611d72836130d2565b9050655af3107a400060008213611d9157652d79883d20008203611d9b565b652d79883d200082015b81611da257fe5b059392505050565b6118ff81831460676118f1565b60006060806060611dc66126d0565b9050611dd061187f565b15611e1857611de687896000815181106115a457fe5b6000611df2828a61273e565b9050611e038983600954848b61312e565b9250611e128984611719613212565b50611e39565b60408051600280825260608201835290916020830190803683370190505091505b611e448882876132a4565b9094509250611e568884611719613212565b611e60818961273e565b600955509750975097945050505050565b611e9881600081518110611e8157fe5b6020026020010151611e9360016122da565b613311565b81600081518110611ea557fe5b602002602001018181525050611ed381600181518110611ec157fe5b6020026020010151611e9360006122da565b81600181518110611ee057fe5b60200260200101818152505050565b333014611fad576000306001600160a01b0316600036604051611f1392919061517c565b6000604051808303816000865af19150503d8060008114611f50576040519150601f19603f3d011682016040523d82523d6000602084013e611f55565b606091505b505090508060008114611f6457fe5b60046000803e6000516001600160e01b0319166343adbafb60e01b8114611f8f573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611fb686612106565b60006060611fcd8b8b8b8b8b8b8b8b63ffffffff16565b5091509150611fdf818463ffffffff16565b8051601f1982018390526343adbafb603f1983015260200260231982016044820181fd5b505050505050505050565b60009081526007602052604090205490565b600080600080600080600061203488613331565b965061203f8861333e565b955061204a8861334b565b945061205588613358565b935061206088613365565b925061206b88613372565b91506120768861283f565b9050919395979092949650565b60008282026109df8415806120a057508385838161209d57fe5b04145b60036118f1565b60006120b682151560046118f1565b826120c357506000610812565b670de0b6b3a7640000838102906120e6908583816120dd57fe5b041460056118f1565b8281816120ef57fe5b04915050610812565b60006109df8383604b61337f565b61212d8160008151811061211657fe5b602002602001015161212860016122da565b612083565b8160008151811061213a57fe5b602002602001018181525050611ed38160018151811061215657fe5b602002602001015161212860006122da565b6001600160a01b038216600090815260208190526040902054612190828210156101966118f1565b6001600160a01b038316600090815260208190526040902082820390556002546121ba9083611719565b6002556040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906117c69086906152b9565b6000606080606061220a6126d0565b90506000612218828a61273e565b9050606061222b8a84600954858c61312e565b905061223a8a82611719613212565b600060606122498c868b61338f565b9150915061225a8c826116eb613212565b612264858d61273e565b600955909e909d50909b509950505050505050505050565b6122a38160008151811061228c57fe5b602002602001015161229e60016122da565b6133e9565b816000815181106122b057fe5b602002602001018181525050611ed3816001815181106122cc57fe5b602002602001015161229e60005b600081612307577f0000000000000000000000000000000000000000000000000000000000000000610ad8565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60008161235b577f0000000000000000000000000000000000000000000000000000000000000000610ad8565b507f0000000000000000000000000000000000000000000000000000000000000000919050565b60006109df8383612083565b60085461239a81611d4c565b80156123a557508343115b1561248e5760006123f87f0000000000000000000000000000000000000000000000000000000000000000857f00000000000000000000000000000000000000000000000000000000000000008661284b565b9050600061242f7f00000000000000000000000000000000000000000000000000000000000000008661242a86611d32565b612627565b9050600061243c846118e4565b9050600061244985611d3f565b905060006124628284878761245d8b611d26565b612945565b90508083146120035761247586826120f8565b9550612481864261341c565b6008819055955050505050505b50505050565b60008282026124ae8415806120a057508385838161209d57fe5b806124bd576000915050610812565b670de0b6b3a764000060001982015b04600101915050610812565b60006116da858486858a6060015161342a565b60006109df8383613311565b60006116da858486858a60600151613497565b60006109df83836133e9565b6000670de0b6b3a7640000821061252e576000610ad8565b50670de0b6b3a76400000390565b600061254b82151560046118f1565b8261255857506000610812565b670de0b6b3a764000083810290612572908583816120dd57fe5b8260018203816124cc57fe5b6000612588610e86565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b1580156125c057600080fd5b505afa1580156125d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a699190614da9565b6000806126048361200e565b905061261d60006126148361283f565b116101396118f1565b610a1481856127b0565b600080612637611bb4858761253c565b92909203949350505050565b600061265c8260a001518261170b90919063ffffffff16565b90506126758260800151826116fd90919063ffffffff16565b905061268e8260600151826120f890919063ffffffff16565b90506126a782604001518261341c90919063ffffffff16565b90506126c082602001518261305690919063ffffffff16565b8251909150610ad8908290613049565b6040805160028082526060808301845292839291906020830190803683370190505090506126fe600161232e565b8160008151811061270b57fe5b602002602001018181525050612721600061232e565b8160018151811061272e57fe5b6020908102919091010152905090565b670de0b6b3a764000060005b83518110156127a05761279661278f85838151811061276557fe5b602002602001015185848151811061277957fe5b602002602001015161350d90919063ffffffff16565b839061355c565b915060010161274a565b50610812600082116101376118f1565b6000808260028111156127bf57fe5b14156127d5576127ce83613331565b9050610812565b60018260028111156127e357fe5b14156127f2576127ce8361334b565b6127ce83613365565b60008082600281111561280a57fe5b1415612819576127ce8361333e565b600182600281111561282757fe5b1415612836576127ce83613358565b6127ce83613372565b6000610ad882826130b1565b60008061286b61285b848661253c565b612865878961253c565b9061253c565b90506116da81611d66565b600080806103ff8180805b8385116128ed57600285850104612898818a613588565b93506128a38461200e565b92506128ae8361283f565b9150898210156128c3578060010195506128e7565b898211156128d6576001810394506128e7565b828397509750505050505050612922565b50612881565b88811061290b5761290561290084613599565b61200e565b82612918565b8161291861290085612c5f565b9650965050505050505b9250929050565b6000612933611bc0565b82604051602001610e2092919061518c565b600080612961858585426129588b61200e565b93929190612abb565b9050607842889003101580612976578661297f565b61297f87612c5f565b600081815260076020526040902092909255509695505050505050565b6000606060006129ab846135a6565b90506129c660008260028111156129be57fe5b1460ce6118f1565b60606129d1856135bc565b90506129df81516002611daa565b6129e881612106565b60606129f26126d0565b90506000612a00828461273e565b90506000612a0f826002612083565b6009929092555099919850909650505050505050565b6001600160a01b038216600090815260208190526040902054612a4890826116eb565b6001600160a01b038316600090815260208190526040902055600254612a6e90826116eb565b6002556040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612aaf9085906152b9565b60405180910390a35050565b600080612ac78761283f565b830390506000818702612ad98961333e565b0190506000828702612aea8a613358565b0190506000838702612afb8b613372565b019050612b0d89848a858b868c611cc6565b9a9950505050505050505050565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612b3a610e62565b6001600160a01b031614158015612b555750612b55836135d2565b15612b7d57612b62610e62565b6001600160a01b0316336001600160a01b0316149050610812565b612b8561257e565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b8152600401612bb4939291906152c2565b60206040518083038186803b158015612bcc57600080fd5b505afa158015612be0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ce9190614c71565b1c6103ff1690565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b6000610ad8826001613588565b6000612c9b680238fd42c5cf03ffff198312158015612c94575068070c1cc73b00c800008313155b60096118f1565b6000821215612cce57612cb082600003612c6c565b6a0c097ce7bc90715b34b9f160241b81612cc657fe5b059050610adb565b60006806f05b59d3b20000008312612d0e57506806f05b59d3b1ffffff1990910190770195e54c5dd42177f53a27172fa9ec630262827000000000612d44565b6803782dace9d90000008312612d4057506803782dace9d8ffffff19909101906b1425982cf597cd205cef7380612d44565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412612d945768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412612dd0576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412612e0a57682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412612e44576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412612e7d57680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412612eb65768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412612eef576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412612f285768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b60006109df8383836135ec565b60006109df838360166135ec565b4690565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b600082821c623fffff16621fffff81136130a45780610a14565b623fffff19179392505050565b1c637fffffff1690565b1c60019081161490565b1c6001600160401b031690565b60006130e26000831360646118f1565b670c7d713b49da0000821380156131005750670f43fc2c04ee000082125b1561311e57670de0b6b3a764000061311783613603565b81612cc657fe5b61312782613721565b9050610adb565b6040805160028082526060808301845292839291906020830190803683370190505090508261315e57905061126f565b6131d1877f00000000000000000000000000000000000000000000000000000000000000008151811061318d57fe5b6020026020010151877f0000000000000000000000000000000000000000000000000000000000000000815181106131c157fe5b6020026020010151878787613ac0565b817f0000000000000000000000000000000000000000000000000000000000000000815181106131fd57fe5b60209081029190910101529695505050505050565b6132488360008151811061322257fe5b60200260200101518360008151811061323757fe5b60200260200101518363ffffffff16565b8360008151811061325557fe5b6020026020010181815250506132868360018151811061327157fe5b60200260200101518360018151811061323757fe5b8360018151811061329357fe5b602002602001018181525050505050565b6000606060006132b3846135a6565b905060008160028111156132c357fe5b14156132de576132d4868686613b38565b9250925050613309565b60018160028111156132ec57fe5b14156132fc576132d48685613be8565b6132d4868686613c1a565b505b935093915050565b600061332082151560046118f1565b81838161332957fe5b049392505050565b6000610ad88260ea61308a565b6000610ad88260b5613c86565b6000610ad882609f61308a565b6000610ad882606a613c86565b6000610ad882605461308a565b6000610ad882601f613c86565b6103ff811b1992909216911b1790565b60006060600061339e846135a6565b905060018160028111156133ae57fe5b14156133bf576132d4868686613cb9565b60028160028111156133cd57fe5b14156133de576132d4868686613d0f565b613307610136612c0c565b60006133f882151560046118f1565b8261340557506000610812565b81600184038161341157fe5b046001019050610812565b60006109df8383602c613d92565b600061344c61344187670429d069189e000061355c565b8311156101306118f1565b600061345887846116eb565b90506000613466888361253c565b9050600061347488876120a7565b905060006134828383613da4565b9050612b0d61349082612516565b899061355c565b60006134b96134ae85670429d069189e000061355c565b8311156101316118f1565b60006134cf6134c88685611719565b869061253c565b905060006134dd858861253c565b905060006134eb8383613da4565b9050600061350182670de0b6b3a7640000611719565b9050612b0d8a82612494565b60008061351a8484613dd0565b9050600061353461352d83612710612494565b60016116eb565b90508082101561354957600092505050610812565b6135538282611719565b92505050610812565b60008282026135768415806120a057508385838161209d57fe5b670de0b6b3a764000090049392505050565b60006104008383015b069392505050565b6000610ad8826001613ed1565b600081806020019051810190610ad89190614dc5565b6060818060200190518101906109df9190614e8a565b60006135e4631c74c91760e11b610deb565b909114919050565b623fffff828116821b90821b198416179392505050565b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161363e57fe5b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f826002919005919091010295945050505050565b6000670de0b6b3a764000082121561375d57613753826a0c097ce7bc90715b34b9f160241b8161374d57fe5b05613721565b6000039050610adb565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c000000000000083126137ae57770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e00000083126137e6576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff0084000831261382e576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613869576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf85083126138a057693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e283126138d757690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d03831261390c5768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb41746121110831261393757680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d831261396c576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f177578893793783126139a1576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b28660383126139d5576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312613a09576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281613a2c57fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000838311613ad15750600061126f565b6000613add858561253c565b90506000613af3670de0b6b3a7640000886120a7565b9050613b07826709b6e64a8ec60000613ee0565b91506000613b158383613da4565b90506000613b2c613b2583612516565b8b9061355c565b9050612b0d818761355c565b60006060613b44611b2b565b600080613b5085613ef7565b91509150613b626002821060646118f1565b6040805160028082526060808301845292602083019080368337019050509050613bc3888381518110613b9157fe5b6020026020010151888481518110613ba557fe5b602002602001015185613bb661082c565b613bbe610b3b565b613f19565b818381518110613bcf57fe5b6020908102919091010152919791965090945050505050565b600060606000613bf784613fd0565b90506060613c0d8683613c0861082c565b613fe6565b9196919550909350505050565b60006060613c26611b2b565b60606000613c3385614097565b91509150613c4382516002611daa565b613c4c82612106565b6000613c69888885613c5c61082c565b613c64610b3b565b6140af565b9050613c798282111560cf6118f1565b9791965090945050505050565b600082821c661fffffffffffff16660fffffffffffff8113613ca85780610a14565b661fffffffffffff19179392505050565b60006060806000613cc985614097565b91509150613cd982516002611daa565b613ce282612106565b6000613cff888885613cf261082c565b613cfa610b3b565b6142da565b9050613c798282101560d06118f1565b60006060600080613d1f85613ef7565b91509150613d316002821060646118f1565b6040805160028082526060808301845292602083019080368337019050509050613bc3888381518110613d6057fe5b6020026020010151888481518110613d7457fe5b602002602001015185613d8561082c565b613d8d610b3b565b6144ea565b637fffffff811b1992909216911b1790565b600080613db18484613dd0565b90506000613dc461352d83612710612494565b905061126f82826116eb565b600081613de65750670de0b6b3a7640000610812565b82613df357506000610812565b613e04600160ff1b841060066118f1565b82613e2a770bce5086492111aea88f4bb1ca6bcf584181ea8059f76532841060076118f1565b826000670c7d713b49da000083138015613e4b5750670f43fc2c04ee000083125b15613e82576000613e5b84613603565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050613e90565b81613e8c84613721565b0290505b670de0b6b3a76400009005613ec8680238fd42c5cf03ffff198212801590613ec1575068070c1cc73b00c800008213155b60086118f1565b6116da81612c6c565b60006104008284038101613591565b600081831015613ef057816109df565b5090919050565b60008082806020019051810190613f0e9190614e54565b909590945092505050565b600080613f2a846128658188611719565b9050613f436709b6e64a8ec600008210156101326118f1565b6000613f61613f5a670de0b6b3a7640000896120a7565b8390613da4565b90506000613f78613f7183612516565b8a9061355c565b90506000613f8589612516565b90506000613f938383612494565b90506000613fa18483611719565b9050613fc0613fb9613fb28a612516565b849061355c565b82906116eb565b9c9b505050505050505050505050565b6000818060200190518101906109df9190614e27565b60606000613ff484846120a7565b9050606085516001600160401b038111801561400f57600080fd5b50604051908082528060200260200182016040528015614039578160200160208202803683370190505b50905060005b865181101561408d5761406e8388838151811061405857fe5b602002602001015161355c90919063ffffffff16565b82828151811061407a57fe5b602090810291909101015260010161403f565b5095945050505050565b6060600082806020019051810190613f0e9190614de1565b6000606084516001600160401b03811180156140ca57600080fd5b506040519080825280602002602001820160405280156140f4578160200160208202803683370190505b5090506000805b88518110156141b95761415489828151811061411357fe5b602002602001015161286589848151811061412a57fe5b60200260200101518c858151811061413e57fe5b602002602001015161171990919063ffffffff16565b83828151811061416057fe5b6020026020010181815250506141af6141a889838151811061417e57fe5b602002602001015185848151811061419257fe5b602002602001015161249490919063ffffffff16565b83906116eb565b91506001016140fb565b50670de0b6b3a764000060005b89518110156142b95760008482815181106141dd57fe5b602002602001015184111561423b5760006142066141fa86612516565b8d858151811061405857fe5b9050600061421a828c868151811061413e57fe5b90506142326141a861422b8b612516565b839061253c565b92505050614252565b88828151811061424757fe5b602002602001015190505b600061427b8c848151811061426357fe5b6020026020010151610c46848f878151811061413e57fe5b90506142ad6142a68c858151811061428f57fe5b60200260200101518361350d90919063ffffffff16565b859061355c565b935050506001016141c6565b506142cd6142c682612516565b8790612494565b9998505050505050505050565b6000606084516001600160401b03811180156142f557600080fd5b5060405190808252806020026020018201604052801561431f578160200160208202803683370190505b5090506000805b88518110156143c75761437f89828151811061433e57fe5b6020026020010151610c4689848151811061435557fe5b60200260200101518c858151811061436957fe5b60200260200101516116eb90919063ffffffff16565b83828151811061438b57fe5b6020026020010181815250506143bd6141a88983815181106143a957fe5b602002602001015185848151811061405857fe5b9150600101614326565b50670de0b6b3a764000060005b89518110156144a8576000838583815181106143ec57fe5b602002602001015111156144485760006144116141fa86670de0b6b3a7640000611719565b90506000614425828c868151811061413e57fe5b905061443f6141a861278f670de0b6b3a76400008c611719565b9250505061445f565b88828151811061445457fe5b602002602001015190505b60006144888c848151811061447057fe5b6020026020010151610c46848f878151811061436957fe5b905061449c6142a68c858151811061428f57fe5b935050506001016143d4565b50670de0b6b3a764000081106144de576144d46144cd82670de0b6b3a7640000611719565b879061355c565b935050505061126f565b6000935050505061126f565b6000806144fb8461286581886116eb565b90506145146729a2241af62c00008211156101336118f1565b600061452b613f5a670de0b6b3a76400008961253c565b9050600061454b61454483670de0b6b3a7640000611719565b8a90612494565b9050600061455889612516565b905060006145668383612494565b905060006145748483611719565b9050613fc0613fb96145858a612516565b849061253c565b6040805160608101909152806000815260200160008152602001600081525090565b604080518082019091526000808252602082015290565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b8035610812816154c6565b600082601f830112614637578081fd5b813561464a614645826154a7565b615481565b81815291506020808301908481018184028601820187101561466b57600080fd5b60005b8481101561468a5781358452928201929082019060010161466e565b505050505092915050565b600082601f8301126146a5578081fd5b81516146b3614645826154a7565b8181529150602080830190848101818402860182018710156146d457600080fd5b60005b8481101561468a578151845292820192908201906001016146d7565b600082601f830112614703578081fd5b81356001600160401b03811115614718578182fd5b61472b601f8201601f1916602001615481565b915080825283602082850101111561474257600080fd5b8060208401602084013760009082016020015292915050565b80356002811061081257600080fd5b8035610812816154e9565b600060e08284031215614786578081fd5b61479060e0615481565b9050813581526020820135602082015260408201356040820152606082013560608201526080820135608082015260a082013560a082015260c082013560c082015292915050565b6000602082840312156147e9578081fd5b81356109df816154c6565b60008060408385031215614806578081fd5b8235614811816154c6565b91506020830135614821816154c6565b809150509250929050565b600080600060608486031215614840578081fd5b833561484b816154c6565b9250602084013561485b816154c6565b929592945050506040919091013590565b600080600080600080600060e0888a031215614886578485fd5b8735614891816154c6565b965060208801356148a1816154c6565b95506040880135945060608801359350608088013560ff811681146148c4578384fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156148f3578182fd5b82356148fe816154c6565b946020939093013593505050565b600080600060608486031215614920578081fd5b83516001600160401b0380821115614936578283fd5b818601915086601f830112614949578283fd5b8151614957614645826154a7565b80828252602080830192508086018b828387028901011115614977578788fd5b8796505b848710156149a257805161498e816154c6565b84526001969096019592810192810161497b565b5089015190975093505050808211156149b9578283fd5b506149c686828701614695565b925050604084015190509250925092565b600060208083850312156149e9578182fd5b82356001600160401b038111156149fe578283fd5b8301601f81018513614a0e578283fd5b8035614a1c614645826154a7565b818152838101908385016040808502860187018a1015614a3a578788fd5b8795505b84861015614a875780828b031215614a54578788fd5b614a5d81615481565b614a678b8461476a565b815282880135888201528452600195909501949286019290810190614a3e565b509098975050505050505050565b60006020808385031215614aa7578182fd5b82356001600160401b03811115614abc578283fd5b8301601f81018513614acc578283fd5b8035614ada614645826154a7565b818152838101908385016060808502860187018a1015614af8578788fd5b8795505b84861015614a875780828b031215614b12578788fd5b614b1b81615481565b614b258b8461476a565b81528288013588820152604080840135908201528452600195909501949286019290810190614afc565b60008060408385031215614b61578182fd5b82356001600160401b0380821115614b77578384fd5b614b8386838701614627565b9350602091508185013581811115614b99578384fd5b85019050601f81018613614bab578283fd5b8035614bb9614645826154a7565b8181528381019083850160e0808502860187018b1015614bd7578788fd5b8795505b84861015614c0357614bed8b83614775565b8452600195909501949286019290810190614bdb565b5096999098509650505050505050565b60008060408385031215614c25578182fd5b82356001600160401b03811115614c3a578283fd5b614c4685828601614627565b95602094909401359450505050565b600060208284031215614c66578081fd5b81356109df816154db565b600060208284031215614c82578081fd5b81516109df816154db565b600060208284031215614c9e578081fd5b5035919050565b600080600080600080600060e0888a031215614cbf578081fd5b873596506020880135614cd1816154c6565b95506040880135614ce1816154c6565b945060608801356001600160401b0380821115614cfc578283fd5b614d088b838c01614627565b955060808a0135945060a08a0135935060c08a0135915080821115614d2b578283fd5b50614d388a828b016146f3565b91505092959891949750929550565b600080600080600060a08688031215614d5e578283fd5b505083359560208501359550604085013594606081013594506080013592509050565b600060208284031215614d92578081fd5b81356001600160e01b0319811681146109df578182fd5b600060208284031215614dba578081fd5b81516109df816154c6565b600060208284031215614dd6578081fd5b81516109df816154e9565b600080600060608486031215614df5578081fd5b8351614e00816154e9565b60208501519093506001600160401b03811115614e1b578182fd5b6149c686828701614695565b60008060408385031215614e39578182fd5b8251614e44816154e9565b6020939093015192949293505050565b600080600060608486031215614e68578081fd5b8351614e73816154e9565b602085015160409095015190969495509392505050565b60008060408385031215614e9c578182fd5b8251614ea7816154e9565b60208401519092506001600160401b03811115614ec2578182fd5b614ece85828601614695565b9150509250929050565b600060208284031215614ee9578081fd5b81356109df816154e9565b600080600060608486031215614f08578081fd5b8335614f13816154e9565b95602085013595506040909401359392505050565b600060c08284031215614f39578081fd5b614f4360c0615481565b823581526020830135602082015260408301356040820152606083013560608201526080830135614f73816154db565b608082015260a0928301359281019290925250919050565b600060e08284031215614f9c578081fd5b6109df8383614775565b600080600060608486031215614fba578081fd5b83356001600160401b0380821115614fd0578283fd5b8186019150610120808389031215614fe6578384fd5b614fef81615481565b9050614ffb888461475b565b815261500a886020850161461c565b602082015261501c886040850161461c565b6040820152606083013560608201526080830135608082015260a083013560a082015261504c8860c0850161461c565b60c082015261505e8860e0850161461c565b60e08201526101008084013583811115615076578586fd5b6150828a8287016146f3565b9183019190915250976020870135975060409096013595945050505050565b60008061010083850312156150b4578182fd5b823591506150c58460208501614775565b90509250929050565b6000806000606084860312156150e2578081fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561510e578182fd5b5050823594602084013594506040840135936060013592509050565b6000815180845260208085019450808401835b838110156151595781518752958201959082019060010161513d565b509495945050505050565b9182526001600160e01b031916602082015260240190565b6000828483379101908152919050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156151f3578351835292840192918401916001016151d7565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156152415781518051855286015186850152928401929085019060010161521c565b5091979650505050505050565b6000602082526109df602083018461512a565b600060408252615274604083018561512a565b828103602084015261126f818561512a565b901515815260200190565b9115158252602082015260400190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b9586526020860194909452604085019290925260608401521515608083015260a082015260c00190565b6000602080835283518082850152825b818110156153e5578581018301518582016040015282016153c9565b818111156153f65783604083870101525b50601f01601f1916929092016040019392505050565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b600083825260406020830152610a14604083018461512a565b60ff91909116815260200190565b6040518181016001600160401b038111828210171561549f57600080fd5b604052919050565b60006001600160401b038211156154bc578081fd5b5060209081020190565b6001600160a01b038116811461082957600080fd5b801515811461082957600080fd5b6003811061082957600080fdfea264697066735822122011b9ce0518e72a8433c57172f34f9061a55b0aae3ddfaaac29bd37bef6530e8564736f6c63430007010033";

export class WeightedPool2TokensMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    params: {
      vault: string;
      name: string;
      symbol: string;
      token0: string;
      token1: string;
      normalizedWeight0: BigNumberish;
      normalizedWeight1: BigNumberish;
      swapFeePercentage: BigNumberish;
      pauseWindowDuration: BigNumberish;
      bufferPeriodDuration: BigNumberish;
      oracleEnabled: boolean;
      owner: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedPool2TokensMock> {
    return super.deploy(
      params,
      overrides || {}
    ) as Promise<WeightedPool2TokensMock>;
  }
  getDeployTransaction(
    params: {
      vault: string;
      name: string;
      symbol: string;
      token0: string;
      token1: string;
      normalizedWeight0: BigNumberish;
      normalizedWeight1: BigNumberish;
      swapFeePercentage: BigNumberish;
      pauseWindowDuration: BigNumberish;
      bufferPeriodDuration: BigNumberish;
      oracleEnabled: boolean;
      owner: string;
    },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(params, overrides || {});
  }
  attach(address: string): WeightedPool2TokensMock {
    return super.attach(address) as WeightedPool2TokensMock;
  }
  connect(signer: Signer): WeightedPool2TokensMock__factory {
    return super.connect(signer) as WeightedPool2TokensMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedPool2TokensMockInterface {
    return new utils.Interface(_abi) as WeightedPool2TokensMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedPool2TokensMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WeightedPool2TokensMock;
  }
}
