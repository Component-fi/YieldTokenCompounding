/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockPool, MockPoolInterface } from "../MockPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum IVault.PoolSpecialization",
        name: "specialization",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "OnExitPoolCalled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "OnJoinPoolCalled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "deregisterTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "currentBalances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "dueProtocolFeeAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IVault.SwapKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "contract IERC20",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "lastChangeBlock",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "userData",
            type: "bytes",
          },
        ],
        internalType: "struct IPoolSwapStructs.SwapRequest",
        name: "swapRequest",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "onSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "assetManagers",
        type: "address[]",
      },
    ],
    name: "registerTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMultiplier",
        type: "uint256",
      },
    ],
    name: "setMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052670de0b6b3a764000060005534801561001c57600080fd5b50604051610e31380380610e3183398101604081905261003b916100ea565b6040516309b2760f60e01b81526001600160a01b038316906309b2760f90610067908490600401610131565b602060405180830381600087803b15801561008157600080fd5b505af1158015610095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b991906100d2565b60a0525060601b6001600160601b031916608052610145565b6000602082840312156100e3578081fd5b5051919050565b600080604083850312156100fc578081fd5b82516001600160a01b0381168114610112578182fd5b602084015190925060038110610126578182fd5b809150509250929050565b602081016003831061013f57fe5b91905290565b60805160601c60a051610cb261017f600039806101e9528061024d52806102b35250806101bc528061028652806103835250610cb26000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063641579a611610066578063641579a6146100f157806374f3b009146101045780638d928af8146101255780639d2c110c1461013a578063d5c096c41461014d57610093565b806301ec954a14610098578063267dc1f0146100c157806338fff2d0146100d65780635f2b65f8146100de575b600080fd5b6100ab6100a6366004610989565b610160565b6040516100b89190610af5565b60405180910390f35b6100d46100cf3660046107c3565b6101a5565b005b6100ab61024b565b6100d46100ec366004610790565b61026f565b6100d46100ff366004610a46565b610312565b6101176101123660046108e6565b610317565b6040516100b8929190610ad0565b61012d610381565b6040516100b89190610c09565b6100ab6101483660046109fa565b6103a5565b61011761015b3660046108e6565b6103e9565b6000808551600181111561017057fe5b1461018b57600054606086015161018691610427565b61019c565b600054606086015161019c9161047a565b95945050505050565b604051633354e3e960e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906366a9c7d290610215907f00000000000000000000000000000000000000000000000000000000000000009086908690600401610ba6565b600060405180830381600087803b15801561022f57600080fd5b505af1158015610243573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b604051633e9d75cb60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690637d3aeb96906102dd907f0000000000000000000000000000000000000000000000000000000000000000908590600401610b8d565b600060405180830381600087803b1580156102f757600080fd5b505af115801561030b573d6000803e3d6000fd5b5050505050565b600055565b6060807fd757d12f44d8d0b749520380aa9c4b9f37a744d90e601bd174de67345108f6c9898989898989896040516103559796959493929190610afe565b60405180910390a1828060200190518101906103719190610885565b909a909950975050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080845160018111156103b557fe5b146103d05760005460608501516103cb91610427565b6103e1565b60005460608501516103e19161047a565b949350505050565b6060807f7db7a909c113f809a4d01bf05f9f750c273333b7db84675206d198d497714694898989898989896040516103559796959493929190610afe565b600061043682151560046104b0565b8261044357506000610474565b670de0b6b3a7640000838102906104669085838161045d57fe5b041460056104b0565b82818161046f57fe5b049150505b92915050565b600082820261049e84158061049757508385838161049457fe5b04145b60036104b0565b670de0b6b3a764000090049392505050565b816104be576104be816104c2565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b803561047481610c64565b600082601f830112610530578081fd5b813561054361053e82610c44565b610c1d565b81815291506020808301908481018184028601820187101561056457600080fd5b60005b8481101561058c57813561057a81610c64565b84529282019290820190600101610567565b505050505092915050565b600082601f8301126105a7578081fd5b81356105b561053e82610c44565b8181529150602080830190848101818402860182018710156105d657600080fd5b60005b8481101561058c578135845292820192908201906001016105d9565b600082601f830112610605578081fd5b815161061361053e82610c44565b81815291506020808301908481018184028601820187101561063457600080fd5b60005b8481101561058c57815184529282019290820190600101610637565b600082601f830112610663578081fd5b813567ffffffffffffffff811115610679578182fd5b61068c601f8201601f1916602001610c1d565b91508082528360208285010111156106a357600080fd5b8060208401602084013760009082016020015292915050565b80356002811061047457600080fd5b60006101208083850312156106de578182fd5b6106e781610c1d565b9150506106f483836106bc565b81526107038360208401610515565b60208201526107158360408401610515565b6040820152606082013560608201526080820135608082015260a082013560a08201526107458360c08401610515565b60c08201526107578360e08401610515565b60e08201526101008083013567ffffffffffffffff81111561077857600080fd5b61078485828601610653565b82840152505092915050565b6000602082840312156107a1578081fd5b813567ffffffffffffffff8111156107b7578182fd5b6103e184828501610520565b600080604083850312156107d5578081fd5b823567ffffffffffffffff808211156107ec578283fd5b6107f886838701610520565b935060209150818501358181111561080e578384fd5b85019050601f81018613610820578283fd5b803561082e61053e82610c44565b81815283810190838501858402850186018a101561084a578687fd5b8694505b8385101561087557803561086181610c64565b83526001949094019391850191850161084e565b5080955050505050509250929050565b60008060408385031215610897578182fd5b825167ffffffffffffffff808211156108ae578384fd5b6108ba868387016105f5565b935060208501519150808211156108cf578283fd5b506108dc858286016105f5565b9150509250929050565b600080600080600080600060e0888a031215610900578283fd5b87359650602088013561091281610c64565b9550604088013561092281610c64565b9450606088013567ffffffffffffffff8082111561093e578485fd5b61094a8b838c01610597565b955060808a0135945060a08a0135935060c08a013591508082111561096d578283fd5b5061097a8a828b01610653565b91505092959891949750929550565b6000806000806080858703121561099e578384fd5b843567ffffffffffffffff808211156109b5578586fd5b6109c1888389016106cb565b955060208701359150808211156109d6578485fd5b506109e387828801610597565b949794965050505060408301359260600135919050565b600080600060608486031215610a0e578283fd5b833567ffffffffffffffff811115610a24578384fd5b610a30868287016106cb565b9660208601359650604090950135949350505050565b600060208284031215610a57578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610a965781516001600160a01b031687529582019590820190600101610a71565b509495945050505050565b6000815180845260208085019450808401835b83811015610a9657815187529582019590820190600101610ab4565b600060408252610ae36040830185610aa1565b828103602084015261019c8185610aa1565b90815260200190565b6000888252602060018060a01b03808a168285015280891660408501525060e06060840152610b3060e0840188610aa1565b8660808501528560a085015283810360c08501528451808252835b81811015610b66578681018401518382018501528301610b4b565b81811115610b7657848483850101525b50601f01601f191601019998505050505050505050565b6000838252604060208301526103e16040830184610a5e565b60008482526020606081840152610bc06060840186610a5e565b8381036040850152845180825282860191830190845b81811015610bfb5783516001600160a01b031683529284019291840191600101610bd6565b509098975050505050505050565b6001600160a01b0391909116815260200190565b60405181810167ffffffffffffffff81118282101715610c3c57600080fd5b604052919050565b600067ffffffffffffffff821115610c5a578081fd5b5060209081020190565b6001600160a01b0381168114610c7957600080fd5b5056fea2646970667358221220bc1a0606bd5c3de9c3f9a56b419f22743bcbe1a33fbfc9a9f57c1ab3619bce4364736f6c63430007010033";

export class MockPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    vault: string,
    specialization: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockPool> {
    return super.deploy(
      vault,
      specialization,
      overrides || {}
    ) as Promise<MockPool>;
  }
  getDeployTransaction(
    vault: string,
    specialization: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vault, specialization, overrides || {});
  }
  attach(address: string): MockPool {
    return super.attach(address) as MockPool;
  }
  connect(signer: Signer): MockPool__factory {
    return super.connect(signer) as MockPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPoolInterface {
    return new utils.Interface(_abi) as MockPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPool {
    return new Contract(address, _abi, signerOrProvider) as MockPool;
  }
}
