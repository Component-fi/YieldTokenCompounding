/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BalanceAllocationMock,
  BalanceAllocationMockInterface,
} from "../BalanceAllocationMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "cash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "cashToManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceA",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sharedCash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sharedManaged",
        type: "bytes32",
      },
    ],
    name: "fromSharedToBalanceB",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isNotZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "isZero",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "lastChangeBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "managed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "managedToCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newManaged",
        type: "uint256",
      },
    ],
    name: "setManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_managed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lastChangeBlock",
        type: "uint256",
      },
    ],
    name: "toBalance",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedCash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tokenABalance",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "tokenBBalance",
        type: "bytes32",
      },
    ],
    name: "toSharedManaged",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "balance",
        type: "bytes32",
      },
    ],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "balances",
        type: "bytes32[]",
      },
    ],
    name: "totals",
    outputs: [
      {
        internalType: "uint256[]",
        name: "result",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108a8806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063736ea832116100a2578063ce83307711610071578063ce833077146102c2578063d6c752c5146102e5578063dd646917146103d8578063e1ac2022146103f5578063fba56f521461041e5761010b565b8063736ea8321461023c57806393b9de4c1461025f578063a44bed6214610282578063ac0177a91461029f5761010b565b806351b311f0116100de57806351b311f0146101b0578063595e098a146101d35780637171e37f146101f65780637323e7ca146102195761010b565b8063256da630146101105780633a1f6e15146101455780633f7e18a5146101765780634ca27dff14610193575b600080fd5b6101336004803603604081101561012657600080fd5b508035906020013561043b565b60408051918252519081900360200190f35b6101626004803603602081101561015b57600080fd5b503561044e565b604080519115158252519081900360200190f35b6101336004803603602081101561018c57600080fd5b503561045f565b610133600480360360208110156101a957600080fd5b503561046a565b610133600480360360408110156101c657600080fd5b5080359060200135610475565b610133600480360360408110156101e957600080fd5b5080359060200135610481565b6101336004803603604081101561020c57600080fd5b508035906020013561048d565b6101336004803603604081101561022f57600080fd5b5080359060200135610499565b6101336004803603604081101561025257600080fd5b50803590602001356104a5565b6101336004803603604081101561027557600080fd5b50803590602001356104b1565b6101336004803603602081101561029857600080fd5b50356104bd565b610133600480360360408110156102b557600080fd5b50803590602001356104c8565b610133600480360360408110156102d857600080fd5b50803590602001356104d4565b610388600480360360208110156102fb57600080fd5b81019060208101813564010000000081111561031657600080fd5b82018360208201111561032857600080fd5b8035906020019184602083028401116401000000008311171561034a57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506104e0945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103c45781810151838201526020016103ac565b505050509050019250505060405180910390f35b610162600480360360208110156103ee57600080fd5b50356104f2565b6101336004803603606081101561040b57600080fd5b50803590602081013590604001356104fd565b6101336004803603602081101561043457600080fd5b5035610512565b6000610447838361051d565b9392505050565b60006104598261056e565b92915050565b600061045982610580565b600061045982610586565b60006104478383610595565b600061044783836105ba565b600061044783836105fa565b6000610447838361061b565b60006104478383610639565b6000610447838361065c565b600061045982610687565b60006104478383610693565b600061044783836106aa565b60606104eb826106ba565b5092915050565b60006104598261076a565b600061050a848484610777565b949350505050565b6000610459826107a5565b6000806105338361052d86610687565b906107c0565b9050600061054a8461054487610586565b906107d6565b9050600061055786610580565b9050610564838383610777565b9695505050505050565b60006105798261076a565b1592915050565b60e01c90565b60701c6001600160701b031690565b60006104476105a384610586565b6105ac84610586565b6105b586610580565b610777565b6000806105d76105c985610580565b6105d285610580565b6107e8565b905061050a6105e585610687565b6105ee85610687565b8363ffffffff166107ff565b60008061060a8361054486610687565b9050600061054a8461052d87610586565b600061044761062984610586565b61063284610586565b60006107ff565b60008061064584610687565b905043610653828583610777565b95945050505050565b60008061066c8361054486610687565b9050600061067985610586565b905043610564838383610777565b6001600160701b031690565b60006104476106a184610687565b6105ac84610687565b60008061066c8361052d86610687565b60606000825167ffffffffffffffff811180156106d657600080fd5b50604051908082528060200260200182016040528015610700578160200160208202803683370190505b5091506000905060005b825181101561076457600084828151811061072157fe5b60200260200101519050610734816107a5565b84838151811061074057fe5b602002602001018181525050610759836105d283610580565b92505060010161070a565b50915091565b6001600160e01b03161590565b600083830161079a8582108015906107925750600160701b82105b61020e61080d565b6106538585856107ff565b60006107b082610586565b6107b983610687565b0192915050565b60006107d083831115600161080d565b50900390565b6000828201610447848210158361080d565b6000818310156107f85781610447565b5090919050565b60e01b60709190911b010190565b8161081b5761081b8161081f565b5050565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fdfea2646970667358221220b0e793cd5ece85f8e1c4bcb5b16e2b18d7cb5403076262749a7382bb7609a58164736f6c63430007010033";

export class BalanceAllocationMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BalanceAllocationMock> {
    return super.deploy(overrides || {}) as Promise<BalanceAllocationMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BalanceAllocationMock {
    return super.attach(address) as BalanceAllocationMock;
  }
  connect(signer: Signer): BalanceAllocationMock__factory {
    return super.connect(signer) as BalanceAllocationMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BalanceAllocationMockInterface {
    return new utils.Interface(_abi) as BalanceAllocationMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BalanceAllocationMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BalanceAllocationMock;
  }
}
