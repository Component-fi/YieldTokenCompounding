{
  "_format": "hh-sol-artifact-1",
  "contractName": "PoolPriceOracleMock",
  "sourceName": "contracts/balancer-core-v2/test/PoolPriceOracleMock.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newSample",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sampleIndex",
          "type": "uint256"
        }
      ],
      "name": "PriceDataProcessed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "sample",
          "type": "bytes32"
        }
      ],
      "name": "decode",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.Sample",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.Sample",
          "name": "sample",
          "type": "tuple"
        }
      ],
      "name": "encode",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "offset",
          "type": "uint256"
        }
      ],
      "name": "findNearestSamplesTimestamp",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "prev",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "next",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.BinarySearchResult[]",
          "name": "results",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IPriceOracle.Variable",
          "name": "variable",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "currentIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getPastAccumulator",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getSample",
      "outputs": [
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "accLogInvariant",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalSamples",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.Sample",
          "name": "sample",
          "type": "tuple"
        }
      ],
      "name": "mockSample",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "indexes",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.Sample[]",
          "name": "samples",
          "type": "tuple[]"
        }
      ],
      "name": "mockSamples",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "elapsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentIndex",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        }
      ],
      "name": "processPriceData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "sample",
          "type": "bytes32"
        },
        {
          "internalType": "int256",
          "name": "logPairPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logBptPrice",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "logInvariant",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "logPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogPairPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogBptPrice",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "logInvariant",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "accLogInvariant",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct PoolPriceOracleMock.Sample",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50610e6c806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c8063259efd1614610093578063264959fb146100a85780633d48f8c1146100d157806360d1507c146100e4578063b48b5b401461010a578063c3748ef114610112578063d437680414610132578063d5125db614610152578063e5fe5f3c14610165578063ff7b6f1e14610178575b600080fd5b6100a66100a1366004610ce3565b61018b565b005b6100bb6100b6366004610c91565b6101aa565b6040516100c89190610d6f565b60405180910390f35b6100bb6100df366004610cc8565b6101c3565b6100f76100f2366004610c3f565b6101f6565b6040516100c89796959493929190610d78565b6100bb61023f565b610125610120366004610c3f565b610245565b6040516100c89190610da8565b610145610140366004610bfd565b6102ca565b6040516100c89190610d10565b6100a6610160366004610c57565b61039d565b6100a6610173366004610b39565b6103f7565b610125610186366004610c57565b610440565b610194816101c3565b6000928352602083905260409092209190915550565b60006101b98484844203610462565b90505b9392505050565b60006101f0826000015183602001518460400151856060015186608001518760a001518860c001516105a8565b92915050565b6000806000806000806000610211610400891061013b610608565b600061021c8961061a565b90506102278161062c565b959f949e50929c50909a509850965090945092505050565b61040090565b61024d6109f8565b6040805160e081019091528061026484600061068f565b81526020016102748460006106da565b815260200161028484600161068f565b81526020016102948460016106da565b81526020016102a484600261068f565b81526020016102b48460026106da565b81526020016102c28461071e565b905292915050565b606082516001600160401b03811180156102e357600080fd5b5060405190808252806020026020018201604052801561031d57816020015b61030a610a35565b8152602001906001900390816103025790505b50905060005b83518110156103965760008061034c86848151811061033e57fe5b60200260200101518661072a565b9150915060405180604001604052806103648461071e565b81526020016103728361071e565b81525084848151811061038157fe5b60209081029190910101525050600101610323565b5092915050565b4285900360006103b082878787876107dd565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516103e6929190610d5f565b60405180910390a150505050505050565b60005b825181101561043b5761043383828151811061041257fe5b602002602001015183838151811061042657fe5b602002602001015161018b565b6001016103fa565b505050565b6104486109f8565b6104586101208787878787610834565b9695505050505050565b600061047382421015610138610608565b4282900360006104828561061a565b9050600061048f8261071e565b90506104a060008211610139610608565b8281116104cc57808303806104b5848a61068f565b026104c0848a6106da565b019450505050506101bc565b60006104d787610894565b905060006104e48261061a565b905060006104f18261071e565b905061050260008211610139610608565b6105118682111561013a610608565b5050600080610520868461072a565b91509150600061052f8361071e565b6105388361071e565b039050801561059057600061054d848d6106da565b610557848e6106da565b03905060006105658561071e565b89039050828183028161057457fe5b0561057f868f6106da565b0199505050505050505050506101bc565b61059a838c6106da565b9750505050505050506101bc565b60006105b482826108a1565b6105bf84601f6108a5565b6105ca8660546108b6565b6105d588606a6108a5565b6105e08a609f6108b6565b6105eb8c60b56108a5565b6105f68e60ea6108b6565b17171717171798975050505050505050565b8161061657610616816108c3565b5050565b60009081526020819052604090205490565b600080600080600080600061064088610916565b965061064b88610923565b955061065688610930565b94506106618861093d565b935061066c8861094a565b925061067788610957565b91506106828861071e565b9050919395979092949650565b60008082600281111561069e57fe5b14156106b4576106ad83610916565b90506101f0565b60018260028111156106c257fe5b14156106d1576106ad83610930565b6106ad8361094a565b6000808260028111156106e957fe5b14156106f8576106ad83610923565b600182600281111561070657fe5b1415610715576106ad8361093d565b6106ad83610957565b60006101f08282610964565b600080806103ff8180805b8385116107a15760028585010461074c818a61096e565b93506107578461061a565b92506107628361071e565b9150898210156107775780600101955061079b565b8982111561078a5760018103945061079b565b8283975097505050505050506107d6565b50610735565b8881106107bf576107b96107b48461097f565b61061a565b826107cc565b816107cc6107b485610894565b9650965050505050505b9250929050565b6000806107f9858585426107f08b61061a565b93929190610834565b905060784288900310158061080e5786610817565b61081787610894565b600081815260208190526040902092909255509695505050505050565b6000806108408761071e565b83039050600081870261085289610923565b01905060008287026108638a61093d565b01905060008387026108748b610957565b01905061088689848a858b868c6105a8565b9a9950505050505050505050565b60006101f082600161096e565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006101f08260ea61098c565b60006101f08260b56109b6565b60006101f082609f61098c565b60006101f082606a6109b6565b60006101f082605461098c565b60006101f082601f6109b6565b1c637fffffff1690565b60006104008383015b069392505050565b60006101f08260016109e9565b600082821c623fffff16621fffff81136109a657806109ae565b623fffff1981175b949350505050565b600082821c661fffffffffffff16660fffffffffffff81136109d857806109ae565b661fffffffffffff19179392505050565b60006104008284038101610977565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b600082601f830112610a5f578081fd5b8135610a72610a6d82610e19565b610df6565b818152915060208083019084810181840286018201871015610a9357600080fd5b60005b84811015610ab257813584529282019290820190600101610a96565b505050505092915050565b600060e08284031215610ace578081fd5b60405160e081018181106001600160401b0382111715610aea57fe5b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b60008060408385031215610b4b578182fd5b82356001600160401b0380821115610b61578384fd5b610b6d86838701610a4f565b9350602091508185013581811115610b83578384fd5b85019050601f81018613610b95578283fd5b8035610ba3610a6d82610e19565b8181528381019083850160e0808502860187018b1015610bc1578788fd5b8795505b84861015610bed57610bd78b83610abd565b8452600195909501949286019290810190610bc5565b5096999098509650505050505050565b60008060408385031215610c0f578182fd5b82356001600160401b03811115610c24578283fd5b610c3085828601610a4f565b95602094909401359450505050565b600060208284031215610c50578081fd5b5035919050565b600080600080600060a08688031215610c6e578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215610ca5578283fd5b833560038110610cb3578384fd5b95602085013595506040909401359392505050565b600060e08284031215610cd9578081fd5b6101bc8383610abd565b6000806101008385031215610cf6578182fd5b82359150610d078460208501610abd565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610d5257815180518552860151868501529284019290850190600101610d2d565b5091979650505050505050565b9115158252602082015260400190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6040518181016001600160401b0381118282101715610e1157fe5b604052919050565b60006001600160401b03821115610e2c57fe5b506020908102019056fea26469706673582212202b012f13ef0e5d3e5f317996501636716828804abe6529f55c29d86ac3be61d464736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061008e5760003560e01c8063259efd1614610093578063264959fb146100a85780633d48f8c1146100d157806360d1507c146100e4578063b48b5b401461010a578063c3748ef114610112578063d437680414610132578063d5125db614610152578063e5fe5f3c14610165578063ff7b6f1e14610178575b600080fd5b6100a66100a1366004610ce3565b61018b565b005b6100bb6100b6366004610c91565b6101aa565b6040516100c89190610d6f565b60405180910390f35b6100bb6100df366004610cc8565b6101c3565b6100f76100f2366004610c3f565b6101f6565b6040516100c89796959493929190610d78565b6100bb61023f565b610125610120366004610c3f565b610245565b6040516100c89190610da8565b610145610140366004610bfd565b6102ca565b6040516100c89190610d10565b6100a6610160366004610c57565b61039d565b6100a6610173366004610b39565b6103f7565b610125610186366004610c57565b610440565b610194816101c3565b6000928352602083905260409092209190915550565b60006101b98484844203610462565b90505b9392505050565b60006101f0826000015183602001518460400151856060015186608001518760a001518860c001516105a8565b92915050565b6000806000806000806000610211610400891061013b610608565b600061021c8961061a565b90506102278161062c565b959f949e50929c50909a509850965090945092505050565b61040090565b61024d6109f8565b6040805160e081019091528061026484600061068f565b81526020016102748460006106da565b815260200161028484600161068f565b81526020016102948460016106da565b81526020016102a484600261068f565b81526020016102b48460026106da565b81526020016102c28461071e565b905292915050565b606082516001600160401b03811180156102e357600080fd5b5060405190808252806020026020018201604052801561031d57816020015b61030a610a35565b8152602001906001900390816103025790505b50905060005b83518110156103965760008061034c86848151811061033e57fe5b60200260200101518661072a565b9150915060405180604001604052806103648461071e565b81526020016103728361071e565b81525084848151811061038157fe5b60209081029190910101525050600101610323565b5092915050565b4285900360006103b082878787876107dd565b90507fa7f3e984c65d79d0fa58244dddb6522f661c9dea23fe4940801cbfe08810750686821415826040516103e6929190610d5f565b60405180910390a150505050505050565b60005b825181101561043b5761043383828151811061041257fe5b602002602001015183838151811061042657fe5b602002602001015161018b565b6001016103fa565b505050565b6104486109f8565b6104586101208787878787610834565b9695505050505050565b600061047382421015610138610608565b4282900360006104828561061a565b9050600061048f8261071e565b90506104a060008211610139610608565b8281116104cc57808303806104b5848a61068f565b026104c0848a6106da565b019450505050506101bc565b60006104d787610894565b905060006104e48261061a565b905060006104f18261071e565b905061050260008211610139610608565b6105118682111561013a610608565b5050600080610520868461072a565b91509150600061052f8361071e565b6105388361071e565b039050801561059057600061054d848d6106da565b610557848e6106da565b03905060006105658561071e565b89039050828183028161057457fe5b0561057f868f6106da565b0199505050505050505050506101bc565b61059a838c6106da565b9750505050505050506101bc565b60006105b482826108a1565b6105bf84601f6108a5565b6105ca8660546108b6565b6105d588606a6108a5565b6105e08a609f6108b6565b6105eb8c60b56108a5565b6105f68e60ea6108b6565b17171717171798975050505050505050565b8161061657610616816108c3565b5050565b60009081526020819052604090205490565b600080600080600080600061064088610916565b965061064b88610923565b955061065688610930565b94506106618861093d565b935061066c8861094a565b925061067788610957565b91506106828861071e565b9050919395979092949650565b60008082600281111561069e57fe5b14156106b4576106ad83610916565b90506101f0565b60018260028111156106c257fe5b14156106d1576106ad83610930565b6106ad8361094a565b6000808260028111156106e957fe5b14156106f8576106ad83610923565b600182600281111561070657fe5b1415610715576106ad8361093d565b6106ad83610957565b60006101f08282610964565b600080806103ff8180805b8385116107a15760028585010461074c818a61096e565b93506107578461061a565b92506107628361071e565b9150898210156107775780600101955061079b565b8982111561078a5760018103945061079b565b8283975097505050505050506107d6565b50610735565b8881106107bf576107b96107b48461097f565b61061a565b826107cc565b816107cc6107b485610894565b9650965050505050505b9250929050565b6000806107f9858585426107f08b61061a565b93929190610834565b905060784288900310158061080e5786610817565b61081787610894565b600081815260208190526040902092909255509695505050505050565b6000806108408761071e565b83039050600081870261085289610923565b01905060008287026108638a61093d565b01905060008387026108748b610957565b01905061088689848a858b868c6105a8565b9a9950505050505050505050565b60006101f082600161096e565b1b90565b661fffffffffffff91909116901b90565b623fffff91909116901b90565b62461bcd60e51b6000908152602060045260076024526642414c23000030600a808404818106603090810160081b95839006959095019082900491820690940160101b939093010160c81b604452606490fd5b60006101f08260ea61098c565b60006101f08260b56109b6565b60006101f082609f61098c565b60006101f082606a6109b6565b60006101f082605461098c565b60006101f082601f6109b6565b1c637fffffff1690565b60006104008383015b069392505050565b60006101f08260016109e9565b600082821c623fffff16621fffff81136109a657806109ae565b623fffff1981175b949350505050565b600082821c661fffffffffffff16660fffffffffffff81136109d857806109ae565b661fffffffffffff19179392505050565b60006104008284038101610977565b6040518060e00160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806040016040528060008152602001600081525090565b600082601f830112610a5f578081fd5b8135610a72610a6d82610e19565b610df6565b818152915060208083019084810181840286018201871015610a9357600080fd5b60005b84811015610ab257813584529282019290820190600101610a96565b505050505092915050565b600060e08284031215610ace578081fd5b60405160e081018181106001600160401b0382111715610aea57fe5b8060405250809150823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201525092915050565b60008060408385031215610b4b578182fd5b82356001600160401b0380821115610b61578384fd5b610b6d86838701610a4f565b9350602091508185013581811115610b83578384fd5b85019050601f81018613610b95578283fd5b8035610ba3610a6d82610e19565b8181528381019083850160e0808502860187018b1015610bc1578788fd5b8795505b84861015610bed57610bd78b83610abd565b8452600195909501949286019290810190610bc5565b5096999098509650505050505050565b60008060408385031215610c0f578182fd5b82356001600160401b03811115610c24578283fd5b610c3085828601610a4f565b95602094909401359450505050565b600060208284031215610c50578081fd5b5035919050565b600080600080600060a08688031215610c6e578081fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080600060608486031215610ca5578283fd5b833560038110610cb3578384fd5b95602085013595506040909401359392505050565b600060e08284031215610cd9578081fd5b6101bc8383610abd565b6000806101008385031215610cf6578182fd5b82359150610d078460208501610abd565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015610d5257815180518552860151868501529284019290850190600101610d2d565b5091979650505050505050565b9115158252602082015260400190565b90815260200190565b968752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b600060e082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b6040518181016001600160401b0381118282101715610e1157fe5b604052919050565b60006001600160401b03821115610e2c57fe5b506020908102019056fea26469706673582212202b012f13ef0e5d3e5f317996501636716828804abe6529f55c29d86ac3be61d464736f6c63430007030033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
